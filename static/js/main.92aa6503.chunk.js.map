{"version":3,"sources":["components/Index.js","components/javascript/page1.js","components/javascript/page2.js","components/javascript/page3.js","components/javascript/page4.js","components/javascript/page5.js","components/javascript/page6.js","components/javascript/page7.js","components/javascript/page8.js","components/javascript/page9.js","components/javascript/page10.js","components/javascript/page11.js","components/javascript/page12.js","components/javascript/page13.js","components/javascript/page14.js","components/javascript/page15.js","components/javascript/page16.js","components/javascript/page17.js","components/javascript/page18.js","components/javascript/page19.js","components/javascript.js","components/moreJavascript/page1.js","components/moreJavascript/page2.js","components/moreJavascript/page3.js","components/moreJavascript/page4.js","components/moreJavascript/page5.js","components/moreJavascript/page6.js","components/moreJavascript.js","components/react/page1.js","components/react/page2.js","components/react/page3.js","components/react/page4.js","components/react/page5.js","components/react/page6.js","components/react/page7.js","components/react/page8.js","components/react/page9.js","components/react/page10.js","components/react/page11.js","components/react/page12.js","components/react/page13.js","components/react/page14.js","components/react/page15.js","components/react/page16.js","components/react/page17.js","components/react.js","components/home.js","App.js","serviceWorker.js","index.js","../node_modules/regenerate-unicode-properties sync /^/.*/.js$"],"names":["Index","className","minimal","onClick","props","changePage","Component","code","trim","page","state","showExample","text","setState","this","Javascript","pageIndex","pages","pageHeadings","getMenu","map","heading","index","disabled","stripes","intent","value","length","style","marginTop","icon","content","position","Position","BOTTOM","rightIcon","MoreJavascript","noInline","ReactContent","Home","Group","displayPage","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","keys","Object","resolve","module","exports"],"mappings":"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","file":"static/js/main.92aa6503.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport { Button } from \"@blueprintjs/core\";\r\n\r\nexport default class Index extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>Index</h1>\r\n                <ol>\r\n                    <li className=\"indexButton\">\r\n                        <Button minimal onClick={() => this.props.changePage(\"javascript\")}>JavaScript Fundamentals</Button>\r\n                    </li>\r\n                    <li className=\"indexButton\">\r\n                        <Button minimal onClick={() => this.props.changePage(\"react\")}>React Basics</Button>\r\n                    </li>\r\n                    <li className=\"indexButton\">\r\n                        <Button minimal onClick={() => this.props.changePage(\"moreJavascript\")}>More JavaScript</Button>\r\n                    </li>\r\n                </ol>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport {\r\n    LiveProvider,\r\n    LiveEditor,\r\n    LiveError,\r\n    LivePreview\r\n} from 'react-live'\r\nimport { Button } from \"@blueprintjs/core\";\r\n\r\nconst code = `\r\nclass Component extends React.Component {\r\n\r\n    usingVar() {\r\n        var myVariable = 3;\r\n        return myVariable;\r\n    }\r\n\r\n    usingLet() {\r\n        let anotherVariable = \"text\";\r\n        return anotherVariable;\r\n    }\r\n\r\n    usingConst() {\r\n        const myConstant = false;\r\n        return myConstant;\r\n    }\r\n\r\n    render() {\r\n      return (\r\n        <div>\r\n          <div>This is a React Component</div>\r\n          \r\n          <div>{this.usingVar()}</div>\r\n          \r\n          <div>{this.usingLet()}</div>\r\n          \r\n          <div>{this.usingConst().toString()}</div>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n`.trim();\r\n\r\nexport default class page extends Component {\r\n    state = {\r\n        showExample: false\r\n    }\r\n    render() {\r\n        return (\r\n            <>\r\n                <h1 className=\"bp3-heading\">Variables</h1>\r\n                <p>There are three ways to declare a variable:</p>\r\n                <blockquote className=\"bp3-blockquote\">\r\n                    var myVariable = 3;\r\n                    </blockquote>\r\n                <blockquote className=\"bp3-blockquote\">\r\n                    let anotherVariable = \"text\";\r\n                    </blockquote>\r\n                <blockquote className=\"bp3-blockquote\">\r\n                    const myConstant = false;\r\n                    </blockquote>\r\n                <p>There are five types of data a variable can hold:</p>\r\n                <p><strong>String</strong>, <strong>Number</strong>, <strong>Boolean</strong>, <strong>Array</strong>, and <strong>Object</strong></p>\r\n                <Button text=\"Show Example\" onClick={() => { this.setState({ showExample: !this.state.showExample }) }} />\r\n                {this.state.showExample &&\r\n                    <div className=\"liveWrapper\">\r\n                        <LiveProvider code={code}>\r\n                            <LiveEditor className=\"liveEditor\" />\r\n                            <div className=\"liveResult\">\r\n                                <LiveError />\r\n                                <LivePreview />\r\n                            </div>\r\n                        </LiveProvider>\r\n                    </div>\r\n                }\r\n            </>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\nimport {\r\n    LiveProvider,\r\n    LiveEditor,\r\n    LiveError,\r\n    LivePreview\r\n} from 'react-live'\r\n\r\nconst code = `\r\nclass Component extends React.Component {\r\n\r\n    usingVar() {\r\n        var myVariable = \"first\";\r\n        if (true) {\r\n            var myVariable = \"second\";\r\n        }\r\n        return myVariable;\r\n    }\r\n\r\n    usingLet() {\r\n        let anotherVariable = \"first\";\r\n        if (true) {\r\n            let anotherVariable = \"second\";\r\n        }\r\n        return anotherVariable;\r\n    }\r\n\r\n    render() {\r\n      return (\r\n        <div>          \r\n          <div>Using var: {this.usingVar()}</div>\r\n          \r\n          <div>Using let: {this.usingLet()}</div>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n`.trim();\r\nexport default function page() {\r\n    return (\r\n        <>\r\n            <h1 className=\"bp3-heading\">Difference between var and let</h1>\r\n            <p>Declaring a variable as 'var' allows it to be used <strong>anywhere inside a function</strong> - function scope</p>\r\n            <p>Declaring a variable as 'let' allows it to be used in the <strong>block only</strong> - block scope</p>\r\n            <div className=\"liveWrapper\">\r\n                <LiveProvider code={code}>\r\n                    <LiveEditor className=\"liveEditor\" />\r\n                    <div className=\"liveResult\">\r\n                        <LiveError />\r\n                        <LivePreview />\r\n                    </div>\r\n                </LiveProvider>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {\r\n    LiveProvider,\r\n    LiveEditor,\r\n    LiveError,\r\n    LivePreview\r\n} from 'react-live'\r\nconst code = `\r\nclass Component extends React.Component {\r\n\r\n    addition() {\r\n        let firstNumber = 3;\r\n        let secondNumber = 5;\r\n        let addition = firstNumber + secondNumber;\r\n        return addition;\r\n    }\r\n\r\n    moreAddition(){\r\n        return \"hello\" + \" \" + \"world\";\r\n    }\r\n\r\n    maths(){\r\n        let number = 6;\r\n        number = number / 3;\r\n        number = number - 3;\r\n        number = number * 4;\r\n        return number;\r\n    }\r\n\r\n    opposite(){\r\n        let boolean = false;\r\n        boolean = !boolean;\r\n        return boolean;\r\n    }\r\n\r\n    remainder(){\r\n        let number = 6;\r\n        return number%2\r\n    }\r\n\r\n    render() {\r\n      return (\r\n        <div>          \r\n          <div>Addition: {this.addition()}</div>\r\n          \r\n          <div>Add strings: {this.moreAddition()}</div>\r\n\r\n          <div>Some maths: {this.maths()}</div>\r\n\r\n          <div>Change booleans: {this.opposite().toString()}</div>\r\n\r\n          <div>Remainder: {this.remainder()}</div>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n`.trim();\r\nexport default function page() {\r\n    return (\r\n        <>\r\n            <h1 className=\"bp3-heading\">Operators</h1>\r\n            <div className=\"liveWrapper\">\r\n                <LiveProvider code={code}>\r\n                    <LiveEditor className=\"liveEditor\" />\r\n                    <div className=\"liveResult\">\r\n                        <LiveError />\r\n                        <LivePreview />\r\n                    </div>\r\n                </LiveProvider>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {\r\n    LiveProvider,\r\n    LiveEditor,\r\n    LiveError,\r\n    LivePreview\r\n} from 'react-live'\r\n\r\nconst code = `\r\nclass Component extends React.Component {\r\n\r\n    addition(){\r\n        let number = 2;\r\n        number += 3;\r\n        return number;\r\n    }\r\n\r\n    increment() {\r\n        let number = 0;\r\n        number++;\r\n        return number;\r\n    }\r\n\r\n    multiply(){\r\n        let number = 2;\r\n        number *= 3;\r\n        return number;\r\n    }\r\n\r\n    render() {\r\n      return (\r\n        <div>                    \r\n          <div>Addition: {this.addition()}</div>\r\n\r\n          <div>Increment: {this.increment()}</div>\r\n\r\n          <div>Multiplication: {this.multiply()}</div>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n`.trim();\r\nexport default function page() {\r\n    return (\r\n        <>\r\n            <h1 className=\"bp3-heading\">Compound Operators</h1>\r\n            <div className=\"liveWrapper\">\r\n                <LiveProvider code={code}>\r\n                    <LiveEditor className=\"liveEditor\" />\r\n                    <div className=\"liveResult\">\r\n                        <LiveError />\r\n                        <LivePreview />\r\n                    </div>\r\n                </LiveProvider>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {\r\n    LiveProvider,\r\n    LiveEditor,\r\n    LiveError,\r\n    LivePreview\r\n} from 'react-live'\r\n\r\nconst code = `\r\nclass Component extends React.Component {\r\n    equals() {\r\n        let number = 2;\r\n        if (number === 2) {\r\n            return \"It's 2\";\r\n        } else {\r\n            return \"It's not 2\"\r\n        }\r\n    }\r\n\r\n    notEquals() {\r\n        let food = \"banana\";\r\n        if (food !== \"apple\") {\r\n            return \"Not hungry\";\r\n        }\r\n    }\r\n\r\n    withBooleans(){\r\n        let food = \"banana\";\r\n        let hungry = true;\r\n        if(!hungry){\r\n            return \"Not hungry\";\r\n        } else if (food === \"apple\") {\r\n            return \"I'll take it\";\r\n        } else {\r\n            return \"Don't want it\";\r\n        }\r\n    }\r\n\r\n    conditionalOr() {\r\n        let day = \"Saturday\";\r\n        if (day === \"Saturday\" || day === \"Sunday\") {\r\n            return \"It's the weekend\";\r\n        }\r\n        return \"Weekday\"\r\n    }\r\n\r\n    conditionalAnd() {\r\n        let number = 5\r\n        if (number > 0 && number <= 5) {\r\n            return \"It's between zero and five\"\r\n        }\r\n        return \"Some other number\"\r\n    }\r\n\r\n    render() {\r\n      return (\r\n        <div>                    \r\n          <div>Equals: {this.equals()}</div>\r\n\r\n          <div>Not Equals: {this.notEquals()}</div>\r\n\r\n          <div>With Booleans: {this.withBooleans()}</div>\r\n\r\n          <div>Conditional OR: {this.conditionalOr()}</div>\r\n\r\n          <div>Conditional AND: {this.conditionalAnd()}</div>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n`.trim();\r\nexport default function page() {\r\n\r\n    return (\r\n        <>\r\n            <h1 className=\"bp3-heading\">Conditionals</h1>\r\n            <p>Conditionals are used to test if an expression is true or false</p>\r\n            <p>Different code can be run depending on the result</p>\r\n            <div className=\"liveWrapper\">\r\n                <LiveProvider code={code}>\r\n                    <LiveEditor className=\"liveEditor\" />\r\n                    <div className=\"liveResult\">\r\n                        <LiveError />\r\n                        <LivePreview />\r\n                    </div>\r\n                </LiveProvider>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {\r\n    LiveProvider,\r\n    LiveEditor,\r\n    LiveError,\r\n    LivePreview\r\n} from 'react-live'\r\n\r\nconst code = `\r\nclass Component extends React.Component {\r\n    manyIfElse() {\r\n        let number = 9;\r\n        if (number === 1) {\r\n            return \"It's 1\";\r\n        } else if (number < 5) {\r\n            return \"It's less than 5\"\r\n        } else if (number !== 6) {\r\n            return \"Something that's not 6\"\r\n        }\r\n    }\r\n\r\n    switchStatement() {\r\n        let food = \"apple\"\r\n        switch (food) {\r\n            case \"banana\":\r\n                return \"It's a banana\"\r\n            case \"pear\":\r\n                return \"It's a pear\"\r\n            case \"apple\":\r\n                return \"It's an apple\"\r\n            case \"strawberry\":\r\n                return \"It's a strawberry\"\r\n            default:\r\n                return \"No idea\"\r\n        }\r\n    }\r\n\r\n    anotherSwitch() {\r\n        let number = 0\r\n        switch (number) {\r\n            case 0:\r\n                number = 10\r\n            case 1:\r\n                number = 11\r\n            case 2:\r\n                number = 12\r\n            case 3:\r\n                number = 13\r\n            default:\r\n                number = 20\r\n        }\r\n        return number\r\n    }\r\n\r\n    render() {\r\n      return (\r\n        <div>                    \r\n          <div>Many If Else: {this.manyIfElse()}</div>\r\n\r\n          <div>Switch Statement: {this.switchStatement()}</div>\r\n\r\n          <div>Another Switch: {this.anotherSwitch()}</div>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n`.trim();\r\nexport default function page() {\r\n\r\n    return (\r\n        <>\r\n            <h1 className=\"bp3-heading\">More Conditionals</h1>\r\n            <div className=\"liveWrapper\">\r\n                <LiveProvider code={code}>\r\n                    <LiveEditor className=\"liveEditor\" />\r\n                    <div className=\"liveResult\">\r\n                        <LiveError />\r\n                        <LivePreview />\r\n                    </div>\r\n                </LiveProvider>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {\r\n    LiveProvider,\r\n    LiveEditor,\r\n    LiveError,\r\n    LivePreview\r\n} from 'react-live'\r\n\r\nconst code = `\r\nclass Component extends React.Component {\r\n    ternary() {\r\n        let day = \"Monday\";\r\n        return day === \"Monday\" ? \"I hate Mondays\" : \"Some other day\"\r\n    }\r\n\r\n    render() {\r\n      return (\r\n        <div>                    \r\n          <div>Ternary: {this.ternary()}</div>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n`.trim();\r\nexport default function page() {\r\n    return (\r\n        <>\r\n            <h1 className=\"bp3-heading\">Ternary Operator</h1>\r\n            <p>The ternary operator is basically a short-hand for if-else</p>\r\n            <p>\"Ternary\" means three operands</p>\r\n            <div className=\"liveWrapper\">\r\n                <LiveProvider code={code}>\r\n                    <LiveEditor className=\"liveEditor\" />\r\n                    <div className=\"liveResult\">\r\n                        <LiveError />\r\n                        <LivePreview />\r\n                    </div>\r\n                </LiveProvider>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React, { Component } from 'react'\r\nimport {\r\n    LiveProvider,\r\n    LiveEditor,\r\n    LiveError,\r\n    LivePreview\r\n} from 'react-live'\r\nimport { Button } from \"@blueprintjs/core\";\r\n\r\nconst code = `\r\nclass Component extends React.Component {\r\n    falsey() {\r\n        let numbers = [2,1,0,5]\r\n        for(let number of numbers){\r\n            if(number){\r\n                // press F12 to view developer console\r\n                console.log(number)\r\n            }            \r\n        }\r\n    }\r\n\r\n    truthy(){\r\n        let truths = [6,\"apple\", new Date(), [], {}]\r\n        for(let element of truths){\r\n            if(element){\r\n                console.log(element + \" It's true!\")\r\n            }            \r\n        }\r\n    }\r\n\r\n    render() {\r\n      return (\r\n        <div>                   \r\n          {this.falsey()}\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n`.trim();\r\nexport default class page extends Component {\r\n    state = {\r\n        showExample: false\r\n    }\r\n    render() {\r\n        return (\r\n            <>\r\n                <h1 className=\"bp3-heading\">Truthy and Falsey</h1>\r\n                <p>JavaScript evaluates certain non-boolean values as a boolean 'true' or 'false'</p>\r\n                <p>These values will evaluate to 'false', and are therefore \"falsey\":</p>\r\n                <blockquote className=\"bp3-blockquote\">\r\n                    null, undefined, 0, NaN, \"\" (an empty string)\r\n            </blockquote>\r\n                <p>What values are truthy?</p>\r\n                <blockquote className=\"bp3-blockquote\">\r\n                    Literally everything else\r\n            </blockquote>\r\n                <Button text=\"Show Example\" onClick={() => { this.setState({ showExample: !this.state.showExample }) }} />\r\n                {this.state.showExample &&\r\n                    <div className=\"liveWrapper\">\r\n                        <LiveProvider code={code}>\r\n                            <LiveEditor className=\"liveEditor\" />\r\n                            <div className=\"liveResult\">\r\n                                <LiveError />\r\n                                <LivePreview />\r\n                            </div>\r\n                        </LiveProvider>\r\n                    </div>\r\n                }\r\n            </>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\nimport {\r\n    LiveProvider,\r\n    LiveEditor,\r\n    LiveError,\r\n    LivePreview\r\n} from 'react-live'\r\n\r\nconst code = `\r\nclass Component extends React.Component {\r\n    functionWithParameters(number) {\r\n        number += 5\r\n        return number\r\n    }\r\n\r\n    noReturn(string){\r\n        string = \"It's mine now\"\r\n    }\r\n\r\n    render() {\r\n      return (\r\n        <div>                    \r\n          <div>With Parameters: {this.functionWithParameters(5)}</div>\r\n\r\n          <div>No Return: {this.noReturn(\"My text\")}</div>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n`.trim();\r\nexport default function page() {\r\n    return (\r\n        <>\r\n            <h1 className=\"bp3-heading\">Functions</h1>\r\n            <p>Functions are a way to reuse code, or common functionality</p>\r\n            <p>They may or may not have paramers in parentheses: ()</p>\r\n            <p>They may or may not return a value</p>\r\n            <div className=\"liveWrapper\">\r\n                <LiveProvider code={code}>\r\n                    <LiveEditor className=\"liveEditor\" />\r\n                    <div className=\"liveResult\">\r\n                        <LiveError />\r\n                        <LivePreview />\r\n                    </div>\r\n                </LiveProvider>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {\r\n    LiveProvider,\r\n    LiveEditor,\r\n    LiveError,\r\n    LivePreview\r\n} from 'react-live'\r\n\r\nconst code = `\r\nclass Component extends React.Component {\r\n    multiply(num1, num2) {        \r\n        return num1 * num2;\r\n    }\r\n\r\n    divide(num1, num2){\r\n        return num1 / num2;\r\n    }\r\n\r\n    modifyNumber(number){\r\n        let anotherNumber = 8;\r\n        let newNumber = this.multiply(number, anotherNumber)\r\n        // 24\r\n        newNumber = Math.round(this.divide(newNumber, 5))\r\n        // 24 divide 5 = 4.8, then rounded to 5\r\n        return newNumber\r\n    }\r\n\r\n    render() {\r\n      return (\r\n        <div>                   \r\n          <div>Modify Number: {this.modifyNumber(3)}</div>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n`.trim();\r\nexport default function page() {\r\n    return (\r\n        <>\r\n            <h1 className=\"bp3-heading\">More Complex Example</h1>\r\n            <div className=\"liveWrapper\">\r\n                <LiveProvider code={code}>\r\n                    <LiveEditor className=\"liveEditor\" />\r\n                    <div className=\"liveResult\">\r\n                        <LiveError />\r\n                        <LivePreview />\r\n                    </div>\r\n                </LiveProvider>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {\r\n    LiveProvider,\r\n    LiveEditor,\r\n    LiveError,\r\n    LivePreview\r\n} from 'react-live'\r\n\r\nconst code = `\r\nclass Component extends React.Component {\r\n    forExample(){\r\n        // counter variable; termination condition; final expression        \r\n        for(let number = 0; number < 20; number++){\r\n            console.log(number);\r\n        }\r\n    }\r\n\r\n    whileExample(){\r\n        let number = 0\r\n        while(number < 10){\r\n            console.log(number);\r\n            number++;\r\n        }\r\n    }\r\n\r\n    doWhileExample(){\r\n        let keepGoing = false\r\n        do {\r\n            console.log(\"Doing stuff\");\r\n        } while (keepGoing);\r\n    }\r\n\r\n    render() {\r\n      return (\r\n        <div>                   \r\n          <div>{this.forExample()}</div>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n`.trim();\r\nexport default function page() {\r\n    return (\r\n        <>\r\n            <h1 className=\"bp3-heading\">Loops</h1>\r\n            <p>Loops are used to repeat code until some condition has been fulfilled</p>\r\n            <p>There are three main ways to create loops:</p>\r\n            <blockquote className=\"bp3-blockquote\">\r\n                for loop\r\n            </blockquote>\r\n            <blockquote className=\"bp3-blockquote\">\r\n                while\r\n                    </blockquote>\r\n            <blockquote className=\"bp3-blockquote\">\r\n                do...while\r\n            </blockquote>\r\n            <div className=\"liveWrapper\">\r\n                <LiveProvider code={code}>\r\n                    <LiveEditor className=\"liveEditor\" />\r\n                    <div className=\"liveResult\">\r\n                        <LiveError />\r\n                        <LivePreview />\r\n                    </div>\r\n                </LiveProvider>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {\r\n    LiveProvider,\r\n    LiveEditor,\r\n    LiveError,\r\n    LivePreview\r\n} from 'react-live'\r\n\r\nconst code = `\r\nclass Component extends React.Component {\r\n    forWithBreak(){\r\n        for(let number = 0; number < 20; number++){\r\n            if(number === 6){\r\n                break;\r\n            }\r\n            console.log(number)\r\n        }\r\n    }\r\n\r\n    forWithContinue(){\r\n        for(let number = 0; number < 20; number++){\r\n            if(number%2 === 0){\r\n                continue;\r\n            }\r\n            console.log(number)\r\n        }\r\n    }\r\n\r\n    render() {\r\n      return (\r\n        <div>                   \r\n          <div>{this.forWithBreak()}</div>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n`.trim();\r\nexport default function page() {\r\n    return (\r\n        <>\r\n            <h1 className=\"bp3-heading\">break and continue</h1>\r\n            <p>A for loop can be terminated using the 'break' statement</p>\r\n            <p>A 'continue' statement is used to skip the current iteration</p>\r\n            <div className=\"liveWrapper\">\r\n                <LiveProvider code={code}>\r\n                    <LiveEditor className=\"liveEditor\" />\r\n                    <div className=\"liveResult\">\r\n                        <LiveError />\r\n                        <LivePreview />\r\n                    </div>\r\n                </LiveProvider>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {\r\n    LiveProvider,\r\n    LiveEditor,\r\n    LiveError,\r\n    LivePreview\r\n} from 'react-live'\r\n\r\nconst code = `\r\nclass Component extends React.Component {\r\n    getElement(index){\r\n        let days = [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"]\r\n        return days[index]\r\n    }\r\n\r\n    entireArray(){\r\n        let days = [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"]\r\n        return days\r\n    }\r\n\r\n    render() {\r\n      return (\r\n        <div>                   \r\n          <div>Get Element: {this.getElement(4)}</div>\r\n\r\n          <div>Entire Array: {this.entireArray().toString()}</div>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n`.trim();\r\nexport default function page() {\r\n    return (\r\n        <>\r\n            <h1 className=\"bp3-heading\">Arrays</h1>\r\n            <p>Arrays are used to store multiple values in a single variable</p>\r\n            <p>Each 'element' in an array is stored at an 'index' starting at zero</p>\r\n            <div className=\"liveWrapper\">\r\n                <LiveProvider code={code}>\r\n                    <LiveEditor className=\"liveEditor\" />\r\n                    <div className=\"liveResult\">\r\n                        <LiveError />\r\n                        <LivePreview />\r\n                    </div>\r\n                </LiveProvider>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React, { Component } from 'react'\r\nimport {\r\n    LiveProvider,\r\n    LiveEditor,\r\n    LiveError,\r\n    LivePreview\r\n} from 'react-live'\r\nimport { Button } from \"@blueprintjs/core\";\r\n\r\nconst code = `\r\nclass Component extends React.Component {\r\n    standardForExample(){\r\n        const numbers = [0,1,2,3,4,5,6,7,8,9]\r\n        let newArray = []\r\n        for(let index = 0; index < numbers.length; index++){\r\n            numbers[index]\r\n            newArray.push(numbers[index])\r\n        }\r\n        return newArray\r\n    }\r\n\r\n    forInExample(){\r\n        const numbers = [0,1,2,3,4,5,6,7,8,9]\r\n        for(let index in numbers){\r\n            numbers[index]\r\n            console.log(numbers[index])\r\n        }\r\n    }\r\n\r\n    forOfExample(){\r\n        const numbers = [0,1,2,3,4,5,6,7,8,9]\r\n        for(let number of numbers){\r\n            number\r\n            console.log(number)\r\n        }\r\n    }\r\n\r\n    forEachExample(){\r\n        const numbers = [0,1,2,3,4,5,6,7,8,9]\r\n        numbers.forEach((number, index)=>{\r\n            number\r\n            console.log(number, index)\r\n        })\r\n    }\r\n\r\n    render() {\r\n      return (\r\n        <div>                   \r\n          <div>{this.standardForExample().map((element)=><p>{element}</p>)}</div>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n`.trim();\r\n\r\nexport default class page extends Component {\r\n    state = {\r\n        showExample: false\r\n    }\r\n    render() {\r\n        return (\r\n            <>\r\n                <h1 className=\"bp3-heading\">Looping through Arrays</h1>\r\n                <p>There are four ways to iterate through an array:</p>\r\n                <blockquote className=\"bp3-blockquote\">\r\n                    Standard for loop\r\n                    </blockquote>\r\n                <blockquote className=\"bp3-blockquote\">\r\n                    for...in\r\n                    </blockquote>\r\n                <blockquote className=\"bp3-blockquote\">\r\n                    for...of\r\n                    </blockquote>\r\n                <blockquote className=\"bp3-blockquote\">\r\n                    .forEach()\r\n                    </blockquote>\r\n                <Button text=\"Show Example\" onClick={() => { this.setState({ showExample: !this.state.showExample }) }} />\r\n                {this.state.showExample &&\r\n                    <div className=\"liveWrapper\">\r\n                        <LiveProvider code={code}>\r\n                            <LiveEditor className=\"liveEditor\" />\r\n                            <div className=\"liveResult\">\r\n                                <LiveError />\r\n                                <LivePreview />\r\n                            </div>\r\n                        </LiveProvider>\r\n                    </div>\r\n                }\r\n            </>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport {\r\n    LiveProvider,\r\n    LiveEditor,\r\n    LiveError,\r\n    LivePreview\r\n} from 'react-live'\r\nimport { Button } from \"@blueprintjs/core\";\r\n\r\nconst code = `\r\nclass Component extends React.Component {\r\n    pushExample(){\r\n        const numbers = [0,1,2,3,4,5,6,7,8,9]\r\n        numbers.push(10);\r\n        numbers.push(11, 12);        \r\n        return numbers;\r\n    }\r\n\r\n    includesExample(){\r\n        const numbers = [0,1,2,3,4,5,6,7,8,9]\r\n        return numbers.includes(5);\r\n    }\r\n\r\n    indexOfExample(){\r\n        const numbers = [\"zero\", \"one\", \"two\", \"three\",\"four\", \"five\"]\r\n        return numbers.indexOf(\"three\");\r\n    }\r\n\r\n    spliceExample(){\r\n        const numbers = [0,1,2,3,4,5,6,7,8,9]\r\n        // start index, number of elements to remove, elements to add (optional)\r\n        numbers.splice(5,1)\r\n        return numbers\r\n    }\r\n\r\n    mapExample(){\r\n        const numbers = [0,1,2,3,4,5,6,7,8,9]\r\n        return numbers.map((number)=>number*2)         \r\n    }\r\n\r\n    render() {\r\n      return (\r\n        <div>                   \r\n          <div>{this.pushExample().toString()}</div>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n`.trim();\r\n\r\nexport default class page extends Component {\r\n    state = {\r\n        showExample: false\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <>\r\n                <h1 className=\"bp3-heading\">Array Methods</h1>\r\n                <p>Here are some common methods you can perform on an array:</p>\r\n                <blockquote className=\"bp3-blockquote\">\r\n                    .push()  - Adds one or more elements to the end of an array\r\n                </blockquote>\r\n                <blockquote className=\"bp3-blockquote\">\r\n                    .includes()  - Check whether an array includes a certain element\r\n                </blockquote>\r\n                <blockquote className=\"bp3-blockquote\">\r\n                    .indexOf()  - Search the array for an element and return the first index where it occurs. Returns -1 if none found.\r\n                </blockquote>\r\n                <blockquote className=\"bp3-blockquote\">\r\n                    .splice()  - Remove or add elements from an array\r\n                </blockquote>\r\n                <blockquote className=\"bp3-blockquote\">\r\n                    .map()  - Creates a new array with the results of calling a function for each array element.\r\n                </blockquote>\r\n                <Button text=\"Show Example\" onClick={() => { this.setState({ showExample: !this.state.showExample }) }} />\r\n                {this.state.showExample &&\r\n                    <div className=\"liveWrapper\">\r\n                        <LiveProvider code={code}>\r\n                            <LiveEditor className=\"liveEditor\" />\r\n                            <div className=\"liveResult\">\r\n                                <LiveError />\r\n                                <LivePreview />\r\n                            </div>\r\n                        </LiveProvider>\r\n                    </div>\r\n                }\r\n            </>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\nimport {\r\n    LiveProvider,\r\n    LiveEditor,\r\n    LiveError,\r\n    LivePreview\r\n} from 'react-live'\r\n\r\nconst code = `\r\nclass Component extends React.Component {\r\n    createObjects(){\r\n        const dateObject = new Date();\r\n        const aBigNumber = BigInt(65411651464165416)\r\n        const noDuplicates = new Set([1,2,3,4,5])\r\n        console.log(dateObject)\r\n    }\r\n\r\n    render() {\r\n      return (\r\n        <div>                   \r\n          {this.createObjects()}\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n`.trim();\r\n\r\nexport default function page() {\r\n    return (\r\n        <>\r\n            <h1 className=\"bp3-heading\">Objects</h1>\r\n            <p>An object is essentially a container for data</p>\r\n            <p>Examples of built-in objects in JavaScript are:</p>\r\n            <blockquote className=\"bp3-blockquote\">\r\n                Date, BigInt, Set\r\n                </blockquote>\r\n            <div className=\"liveWrapper\">\r\n                <LiveProvider code={code}>\r\n                    <LiveEditor className=\"liveEditor\" />\r\n                    <div className=\"liveResult\">\r\n                        <LiveError />\r\n                        <LivePreview />\r\n                    </div>\r\n                </LiveProvider>\r\n            </div>\r\n        </>\r\n    )\r\n\r\n}\r\n","import React from 'react'\r\nimport {\r\n    LiveProvider,\r\n    LiveEditor,\r\n    LiveError,\r\n    LivePreview\r\n} from 'react-live'\r\n\r\nconst code = `\r\nclass Component extends React.Component {\r\n    createJson(){\r\n        const person = {name: \"Sean\", age: 27}\r\n        person.name\r\n        person['age']        \r\n        return person\r\n    }\r\n\r\n    render() {\r\n      return (\r\n        <div>  \r\n            <div>\r\n                My name: {this.createJson().name}\r\n            </div>\r\n            <div>\r\n                My age: {this.createJson().age}\r\n            </div>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n`.trim();\r\n\r\nexport default function page() {\r\n    return (\r\n        <>\r\n            <h1 className=\"bp3-heading\">JSON</h1>\r\n            <p>JSON is short for \"JavaScript Object Notation\"</p>\r\n            <p>It is a type of object consisting of 'Key' and 'Value' pairs, represented in strings</p>\r\n            <div className=\"liveWrapper\">\r\n                <LiveProvider code={code}>\r\n                    <LiveEditor className=\"liveEditor\" />\r\n                    <div className=\"liveResult\">\r\n                        <LiveError />\r\n                        <LivePreview />\r\n                    </div>\r\n                </LiveProvider>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {\r\n    LiveProvider,\r\n    LiveEditor,\r\n    LiveError,\r\n    LivePreview\r\n} from 'react-live'\r\n\r\nconst code = `\r\nclass Component extends React.Component {\r\n    bigJson(){\r\n        const json = {\r\n            \"squadName\": \"Super hero squad\",\r\n            \"homeTown\": \"Metro City\",\r\n            \"formed\": 2016,\r\n            \"secretBase\": \"Super tower\",\r\n            \"active\": true,\r\n            \"members\": [\r\n              {\r\n                \"name\": \"Molecule Man\",\r\n                \"age\": 29,\r\n                \"secretIdentity\": \"Dan Jukes\",\r\n                \"powers\": [\r\n                  \"Radiation resistance\",\r\n                  \"Turning tiny\",\r\n                  \"Radiation blast\"\r\n                ]\r\n              },\r\n              {\r\n                \"name\": \"Madame Uppercut\",\r\n                \"age\": 39,\r\n                \"secretIdentity\": \"Jane Wilson\",\r\n                \"powers\": [\r\n                  \"Million tonne punch\",\r\n                  \"Damage resistance\",\r\n                  \"Superhuman reflexes\"\r\n                ]\r\n              },\r\n              {\r\n                \"name\": \"Eternal Flame\",\r\n                \"age\": 1000000,\r\n                \"secretIdentity\": \"Unknown\",\r\n                \"powers\": [\r\n                  \"Immortality\",\r\n                  \"Heat Immunity\",\r\n                  \"Inferno\",\r\n                  \"Teleportation\",\r\n                  \"Interdimensional travel\"\r\n                ]\r\n              }\r\n            ]\r\n          }\r\n        return json\r\n    }\r\n\r\n    render() {\r\n      return (\r\n        <div>\r\n            {this.bigJson().members[1].powers[2]}\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n`.trim();\r\n\r\nexport default function page() {\r\n    return (\r\n        <>\r\n            <h1 className=\"bp3-heading\">Big JSON Example</h1>\r\n            <div className=\"liveWrapper\">\r\n                <LiveProvider code={code}>\r\n                    <LiveEditor className=\"liveEditor\" />\r\n                    <div className=\"liveResult\">\r\n                        <LiveError />\r\n                        <LivePreview />\r\n                    </div>\r\n                </LiveProvider>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React, { Component } from 'react'\r\nimport {\r\n    LiveProvider,\r\n    LiveEditor,\r\n    LiveError,\r\n    LivePreview\r\n} from 'react-live'\r\nimport { Button } from \"@blueprintjs/core\";\r\n\r\nconst code = `\r\nclass Component extends React.Component {\r\n    parseExample(){\r\n        const person = '{\"name\": \"Sean\", \"age\": 27}'\r\n        return JSON.parse(person)\r\n    }\r\n\r\n    stringifyExample(){\r\n        const person = {name: \"Sean\", age: 27}\r\n        return JSON.stringify(person) \r\n    }\r\n\r\n    assignExample(){\r\n        const person = {name: \"Sean\", age: 27}\r\n        const anotherPerson = Object.assign({},person)\r\n        anotherPerson.name = \"Paul\"\r\n        return anotherPerson\r\n    }\r\n\r\n    keysExample(){\r\n        const person = {name: \"Sean\", age: 27}\r\n        return Object.keys(person)\r\n    }\r\n\r\n    render() {\r\n      return (\r\n        <div>  \r\n            <div>\r\n                Parse: {this.parseExample().toString()}\r\n            </div>\r\n            <div>\r\n                Stringify: {this.stringifyExample().age}\r\n            </div>\r\n            <div>\r\n                Assign: {JSON.stringify(this.assignExample())}\r\n            </div>\r\n            <div>\r\n                Keys: {this.keysExample().toString()}\r\n            </div>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n`.trim();\r\n\r\nexport default class page extends Component {\r\n    state = {\r\n        showExample: false\r\n    }\r\n    render() {\r\n        return (\r\n            <>\r\n                <h1 className=\"bp3-heading\">Working with JSON</h1>\r\n                <blockquote className=\"bp3-blockquote\">\r\n                    JSON.parse() - parse a (valid) string into a JSON object\r\n            </blockquote>\r\n                <blockquote className=\"bp3-blockquote\">\r\n                    JSON.stringify() - converts JSON object into a string\r\n             </blockquote>\r\n                <blockquote className=\"bp3-blockquote\">\r\n                    Object.assign() - creates a copy of an object\r\n             </blockquote>\r\n                <blockquote className=\"bp3-blockquote\">\r\n                    Object.keys() - returns an array of the object's keys\r\n             </blockquote>\r\n                <Button text=\"Show Example\" onClick={() => { this.setState({ showExample: !this.state.showExample }) }} />\r\n                {this.state.showExample &&\r\n                    <div className=\"liveWrapper\">\r\n                        <LiveProvider code={code}>\r\n                            <LiveEditor className=\"liveEditor\" />\r\n                            <div className=\"liveResult\">\r\n                                <LiveError />\r\n                                <LivePreview />\r\n                            </div>\r\n                        </LiveProvider>\r\n                    </div>\r\n                }\r\n            </>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Button, ProgressBar, Popover, Menu, MenuItem, Position } from \"@blueprintjs/core\";\r\nimport Page1 from './javascript/page1';\r\nimport Page2 from './javascript/page2';\r\nimport Page3 from './javascript/page3';\r\nimport Page4 from './javascript/page4';\r\nimport Page5 from './javascript/page5';\r\nimport Page6 from './javascript/page6';\r\nimport Page7 from './javascript/page7';\r\nimport Page8 from './javascript/page8';\r\nimport Page9 from './javascript/page9';\r\nimport Page10 from './javascript/page10';\r\nimport Page11 from './javascript/page11';\r\nimport Page12 from './javascript/page12';\r\nimport Page13 from './javascript/page13';\r\nimport Page14 from './javascript/page14';\r\nimport Page15 from './javascript/page15';\r\nimport Page16 from './javascript/page16';\r\nimport Page17 from './javascript/page17';\r\nimport Page18 from './javascript/page18';\r\nimport Page19 from './javascript/page19';\r\n\r\nexport default class Javascript extends Component {\r\n    state = {\r\n        pageIndex: 0,\r\n    }\r\n\r\n    pages = [\r\n        <Page1 />,\r\n        <Page2 />,\r\n        <Page3 />,\r\n        <Page4 />,\r\n        <Page5 />,\r\n        <Page6 />,\r\n        <Page7 />,\r\n        <Page8 />,\r\n        <Page9 />,\r\n        <Page10 />,\r\n        <Page11 />,\r\n        <Page12 />,\r\n        <Page13 />,\r\n        <Page14 />,\r\n        <Page15 />,\r\n        <Page16 />,\r\n        <Page17 />,\r\n        <Page18 />,\r\n        <Page19 />,\r\n    ]\r\n\r\n    pageHeadings = [\r\n        \"Variables\",\r\n        \"Difference between var and let\",\r\n        \"Operators\",\r\n        \"Compound Operators\",\r\n        \"Conditionals\",\r\n        \"More Conditionals\",\r\n        \"Ternary Operator\",\r\n        \"Truthy and Falsey\",\r\n        \"Functions\",\r\n        \"More Complex Example\",\r\n        \"Loops\",\r\n        \"break and continue\",\r\n        \"Arrays\",\r\n        \"Looping through Arrays\",\r\n        \"Array Methods\",\r\n        \"Objects\",\r\n        \"JSON\",\r\n        \"Big JSON Example\",\r\n        \"Working with JSON\"\r\n    ]\r\n\r\n    getMenu = () => {\r\n        return <Menu>\r\n            {this.pageHeadings.map((heading, index) =>\r\n                <MenuItem text={heading} onClick={() => { this.setState({ pageIndex: index }) }} disabled={this.state.pageIndex === index} />\r\n            )}\r\n        </Menu>\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <div>\r\n                    <ProgressBar stripes={false} intent=\"primary\" value={this.state.pageIndex / (this.pages.length - 1)} />\r\n                </div>\r\n                <div style={{ marginTop: \"10px\" }}>\r\n                    {this.state.pageIndex > 0 &&\r\n                        <Button icon=\"arrow-left\" text=\"Previous\" onClick={() => { this.setState({ pageIndex: this.state.pageIndex - 1 }) }} />\r\n                    }\r\n                    <Popover className=\"jumpButton\" content={this.getMenu()} position={Position.BOTTOM}>\r\n                        <Button text=\"Jump to...\" />\r\n                    </Popover>\r\n                    {this.state.pageIndex < this.pages.length - 1 &&\r\n                        <Button className=\"nextButton\" rightIcon=\"arrow-right\" text=\"Next\" onClick={() => { this.setState({ pageIndex: this.state.pageIndex + 1 }) }} />\r\n                    }\r\n                </div>\r\n                <div className=\"pageContent\">\r\n                    {this.pages[this.state.pageIndex]}\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\nimport {\r\n    LiveProvider,\r\n    LiveEditor,\r\n    LiveError,\r\n    LivePreview\r\n} from 'react-live'\r\n\r\nconst code = `\r\nclass Component extends React.Component {\r\n    spreadArrays(){\r\n        let parts = ['shoulders', 'knees']; \r\n        let lyrics = ['head', ...parts, 'and', 'toes']; \r\n        return lyrics\r\n    }\r\n\r\n    spreadObjects(){\r\n        let obj1 = { foo: 'bar', x: 42 };\r\n        let obj2 = { foo: 'baz', y: 13 };\r\n\r\n        return {...obj1, ...obj2}\r\n    }\r\n\r\n    render() {\r\n      return (\r\n        <div>  \r\n            <div>\r\n                Spread arrays: {this.spreadArrays().toString()}\r\n            </div>\r\n            <div>\r\n                Spread objects: {JSON.stringify(this.spreadObjects())}\r\n            </div>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n`.trim();\r\n\r\nexport default function page() {\r\n    return (\r\n        <>\r\n            <h1 className=\"bp3-heading\">The Spread Operator</h1>\r\n            <p>The spread operator \"expands\" iterable objects, such as arrays</p>\r\n            <blockquote className=\"bp3-blockquote\">\r\n                ...array\r\n             </blockquote>\r\n            <div className=\"liveWrapper\">\r\n                <LiveProvider code={code}>\r\n                    <LiveEditor className=\"liveEditor\" />\r\n                    <div className=\"liveResult\">\r\n                        <LiveError />\r\n                        <LivePreview />\r\n                    </div>\r\n                </LiveProvider>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {\r\n    LiveProvider,\r\n    LiveEditor,\r\n    LiveError,\r\n    LivePreview\r\n} from 'react-live'\r\n\r\nconst code = `\r\nclass Component extends React.Component {\r\n    normalDeclaration(){\r\n        this.age = 10\r\n\r\n        this.normal = setInterval(function growUp() {\r\n            // This growUp() function defines a new \"this\"\r\n            this.age++;\r\n            console.log(\"normal function\", this.age)\r\n            }, 1000);\r\n    }\r\n\r\n    arrowDeclaration(){\r\n        this.age = 10\r\n\r\n        this.arrow = setInterval(() => {\r\n            // arrow function uses \"this\" in the arrowDeclaration() function\r\n            this.age++;\r\n            console.log(\"arrow function\", this.age)\r\n            }, 1000);\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        clearInterval(this.normal)\r\n        clearInterval(this.arrow)\r\n    }\r\n\r\n    render() {\r\n        {this.normalDeclaration()}\r\n        {this.arrowDeclaration()}\r\n      return (\r\n        <div>  \r\n        </div>\r\n      )\r\n    }\r\n  }\r\n`.trim();\r\n\r\nexport default function page() {\r\n    return (\r\n        <>\r\n            <h1 className=\"bp3-heading\">Arrow Functions</h1>\r\n            <p>Arrow Functions are a shorthand declaration of a function</p>\r\n            <p>They do not have bindings to the <code>this</code> keyword, so it uses <code>this</code> from its enclosing scope</p>\r\n            <div className=\"liveWrapper\">\r\n                <LiveProvider code={code}>\r\n                    <LiveEditor className=\"liveEditor\" />\r\n                    <div className=\"liveResult\">\r\n                        <LiveError />\r\n                        <LivePreview />\r\n                    </div>\r\n                </LiveProvider>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {\r\n    LiveProvider,\r\n    LiveEditor,\r\n    LiveError,\r\n    LivePreview\r\n} from 'react-live'\r\n\r\nconst code = `\r\nclass Component extends React.Component {\r\n    arrowInForEach(){\r\n        const array = [1, 2, 3, 4, 5, 6, 7]\r\n        array.forEach(function (element) { console.log(\"normal function\", element) })\r\n\r\n        array.forEach((element => console.log(\"arrow function\", element)))\r\n    }\r\n\r\n    arrowInMap() {\r\n        const array = [1, 2, 3, 4, 5, 6, 7]\r\n\r\n        const withFunction = array.map(function (element) { return element * 2 })\r\n        console.log(\"function\", withFunction)\r\n\r\n        const withArrow = array.map((element) => { return element * 2 })\r\n        console.log(\"arrow\", withArrow)\r\n\r\n        const shorterArrow = array.map(element => element * 2)\r\n        console.log(\"short arrow\", shorterArrow)\r\n    }\r\n\r\n    render() {\r\n        {this.arrowInForEach()}\r\n      return (\r\n        <div>  \r\n        </div>\r\n      )\r\n    }\r\n  }\r\n`.trim();\r\n\r\nexport default function page() {    \r\n    return (\r\n        <>\r\n            <h1 className=\"bp3-heading\">Arrow Function Syntax</h1>\r\n            <div className=\"liveWrapper\">\r\n                <LiveProvider code={code}>\r\n                    <LiveEditor className=\"liveEditor\" />\r\n                    <div className=\"liveResult\">\r\n                        <LiveError />\r\n                        <LivePreview />\r\n                    </div>\r\n                </LiveProvider>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {\r\n    LiveProvider,\r\n    LiveEditor,\r\n    LiveError,\r\n    LivePreview\r\n} from 'react-live'\r\n\r\nconst code = `\r\nclass Component extends React.Component {\r\n    fetchData() {\r\n        console.log(\"fetch started\")\r\n        this.mockFetch().then((response) => {\r\n            console.log(\"Yay! \" + response)\r\n        });\r\n        console.log(\"fetch complete?\")\r\n    }\r\n\r\n    mockFetch() {\r\n        return new Promise((resolve, reject) => {\r\n            setTimeout(function () {\r\n                resolve(\"Success!\")\r\n            }, 2000)\r\n        })\r\n    }\r\n\r\n    render() {\r\n        {this.fetchData()}\r\n      return (\r\n        <div>  \r\n        </div>\r\n      )\r\n    }\r\n  }\r\n`.trim();\r\n\r\nexport default function page() {\r\n    return (\r\n        <>\r\n            <h1 className=\"bp3-heading\">Asynchronous Functions</h1>\r\n            <p>Asynchronous functions do not return or complete immedaiately when they are called</p>\r\n            <p>Examples are <code>fetch()</code>, and <code>setState()</code> in React</p>\r\n            <div className=\"liveWrapper\">\r\n                <LiveProvider code={code}>\r\n                    <LiveEditor className=\"liveEditor\" />\r\n                    <div className=\"liveResult\">\r\n                        <LiveError />\r\n                        <LivePreview />\r\n                    </div>\r\n                </LiveProvider>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {\r\n    LiveProvider,\r\n    LiveEditor,\r\n    LiveError,\r\n    LivePreview\r\n} from 'react-live'\r\n\r\nconst code = `\r\nclass Component extends React.Component {\r\n    chainingThens() {\r\n        this.mockFetch()\r\n            .then(response => response.json())\r\n            .then(data => { console.log(data) })\r\n    }\r\n\r\n    /* \r\n    in Create-React-App\r\n    async usingAwait(){\r\n        const response = await this.mockFetch()\r\n        const data = await response.json()\r\n        console.log(data)\r\n    }\r\n    */\r\n\r\n    mockFetch() {\r\n        return new Promise((resolve, reject) => {\r\n            setTimeout(function () {\r\n                var body = '{ \"text\": \"Complete\" }';\r\n                var init = { \"status\": 200 };\r\n                var myResponse = new Response(body, init);\r\n                resolve(myResponse)\r\n            }, 2000)\r\n        })\r\n    }\r\n\r\n    render() {\r\n        {this.chainingThens()}\r\n      return (\r\n        <div>  \r\n        </div>\r\n      )\r\n    }\r\n  }\r\n`.trim();\r\n\r\nexport default function page() {\r\n    return (\r\n        <>\r\n            <h1 className=\"bp3-heading\">Resolving Promises</h1>\r\n            <p><code>.then()</code> is used to wait for a Promise to resolve</p>\r\n            <p>Alternatively, <code>async</code> and <code>await</code> can be used</p>\r\n            <div className=\"liveWrapper\">\r\n                <LiveProvider code={code}>\r\n                    <LiveEditor className=\"liveEditor\" />\r\n                    <div className=\"liveResult\">\r\n                        <LiveError />\r\n                        <LivePreview />\r\n                    </div>\r\n                </LiveProvider>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {\r\n    LiveProvider,\r\n    LiveEditor,\r\n    LiveError,\r\n    LivePreview\r\n} from 'react-live'\r\n\r\nconst code = `\r\nclass Component extends React.Component {\r\n    constructor() {\r\n        super()\r\n        this.state = { \r\n            dataFromFetch: \"\"\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.mockFetch()\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                this.setState({\r\n                    dataFromFetch: data.text\r\n                })\r\n            })\r\n    }\r\n\r\n    mockFetch() {\r\n        return new Promise((resolve, reject) => {\r\n            setTimeout(function () {\r\n                var body = '{ \"text\": \"Fetch Completed!\" }';\r\n                var init = { \"status\": 200 };\r\n                var myResponse = new Response(body, init);\r\n                resolve(myResponse)\r\n            }, 2000)\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.state.dataFromFetch ?\r\n                    <span>{this.state.dataFromFetch}</span>\r\n                    :\r\n                    <span>Loading...</span>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n  }\r\n`.trim();\r\n\r\nexport default function page() {\r\n    return (\r\n        <>\r\n            <h1 className=\"bp3-heading\">A Typical Fetch Example In React</h1>\r\n            <div className=\"liveWrapper\">\r\n                <LiveProvider code={code}>\r\n                    <LiveEditor className=\"liveEditor\" />\r\n                    <div className=\"liveResult\">\r\n                        <LiveError />\r\n                        <LivePreview />\r\n                    </div>\r\n                </LiveProvider>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Button, ProgressBar, Popover, Menu, MenuItem, Position } from \"@blueprintjs/core\";\r\nimport Page1 from './moreJavascript/page1';\r\nimport Page2 from './moreJavascript/page2';\r\nimport Page3 from './moreJavascript/page3';\r\nimport Page4 from './moreJavascript/page4';\r\nimport Page5 from './moreJavascript/page5';\r\nimport Page6 from './moreJavascript/page6';\r\n\r\nexport default class MoreJavascript extends Component {\r\n    state = {\r\n        pageIndex: 0,\r\n    }\r\n\r\n    pages = [\r\n        <Page1 />,\r\n        <Page2 />,\r\n        <Page3 />,\r\n        <Page4 />,\r\n        <Page5 />,\r\n        <Page6 />,\r\n    ]\r\n\r\n    pageHeadings = [\r\n        \"The Spread Operator\",\r\n        \"Arrow Functions\",\r\n        \"Arrow Function Syntax\",\r\n        \"Asynchronous Functions\",\r\n        \"Resolving Promises\",\r\n        \"A Typical Fetch Example In React\"\r\n    ]\r\n\r\n    getMenu = () => {\r\n        return <Menu>\r\n            {this.pageHeadings.map((heading, index) =>\r\n                <MenuItem text={heading} onClick={() => { this.setState({ pageIndex: index }) }} disabled={this.state.pageIndex === index} />\r\n            )}\r\n        </Menu>\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <div>\r\n                    <ProgressBar stripes={false} intent=\"primary\" value={this.state.pageIndex / (this.pages.length - 1)} />\r\n                </div>\r\n                <div style={{ marginTop: \"10px\" }}>\r\n                    {this.state.pageIndex > 0 &&\r\n                        <Button icon=\"arrow-left\" text=\"Previous\" onClick={() => { this.setState({ pageIndex: this.state.pageIndex - 1 }) }} />\r\n                    }\r\n                    <Popover className=\"jumpButton\" content={this.getMenu()} position={Position.BOTTOM}>\r\n                        <Button text=\"Jump to...\" />\r\n                    </Popover>\r\n                    {this.state.pageIndex < this.pages.length - 1 &&\r\n                        <Button className=\"nextButton\" rightIcon=\"arrow-right\" text=\"Next\" onClick={() => { this.setState({ pageIndex: this.state.pageIndex + 1 }) }} />\r\n                    }\r\n                </div>\r\n                <div className=\"pageContent\">\r\n                    {this.pages[this.state.pageIndex]}\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport {\r\n    LiveProvider,\r\n    LiveEditor,\r\n    LiveError,\r\n    LivePreview\r\n} from 'react-live'\r\n\r\nconst code = `\r\nclass MyComponent extends React.Component {\r\n    render() {\r\n      return (\r\n        <div>\r\n          <div>Return a div element</div>\r\n          \r\n          <span>Return a span element</span>\r\n          \r\n          <ol>\r\n            <li>\r\n                ordered list\r\n            </li>\r\n            <li>\r\n                list item\r\n            </li>\r\n          </ol>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n`.trim();\r\n\r\nexport default class page extends Component {\r\n    state = {\r\n        showExample: false\r\n    }\r\n    render() {\r\n        return (\r\n            <>\r\n                <h1 className=\"bp3-heading\">React Components</h1>\r\n                <p>User interfaces are built in React by using pieces of code called \"components\"</p>\r\n                <p>The most basic type of React component is the <code>Class</code> component. This uses a render method to return HTML elements to display.</p>\r\n                <div className=\"liveWrapper\">\r\n                    <LiveProvider code={code}>\r\n                        <LiveEditor className=\"liveEditor\" />\r\n                        <div className=\"liveResult\">\r\n                            <LiveError />\r\n                            <LivePreview />\r\n                        </div>\r\n                    </LiveProvider>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport {\r\n    LiveProvider,\r\n    LiveEditor,\r\n    LiveError,\r\n    LivePreview\r\n} from 'react-live'\r\n\r\nconst code = `\r\nclass MyComponent extends React.Component {\r\n    render() {\r\n      let aStringVariable = \"some text\" \r\n      return (\r\n        <div>\r\n            <div>\r\n                One plus one equals {1 + 1}\r\n            </div>\r\n            <div>\r\n                Right now, it is {new Date().toString()}\r\n            </div>\r\n            <div>\r\n                Display {aStringVariable}\r\n            </div>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n`.trim();\r\n\r\nexport default class page extends Component {\r\n    render() {\r\n        return (\r\n            <>\r\n                <h1 className=\"bp3-heading\">JSX</h1>\r\n                <p>Elements that are rendered are neither strings nor actual HTML elements, but \"JSX\"</p>\r\n                <p>Curly braces can be inserted into JSX which allows any JavaScript expression to be evaluated</p>\r\n                <div className=\"liveWrapper\">\r\n                    <LiveProvider code={code}>\r\n                        <LiveEditor className=\"liveEditor\" />\r\n                        <div className=\"liveResult\">\r\n                            <LiveError />\r\n                            <LivePreview />\r\n                        </div>\r\n                    </LiveProvider>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport {\r\n    LiveProvider,\r\n    LiveEditor,\r\n    LiveError,\r\n    LivePreview\r\n} from 'react-live'\r\n\r\nconst code = `\r\nclass OriginalComponent extends React.Component {\r\n\r\n    functionInComponent(){\r\n        return <span>function</span>\r\n    }\r\n\r\n    returnSomeJSX(){\r\n        const jsx = <h1>Hello World</h1>\r\n        return jsx\r\n    }\r\n\r\n    render() {\r\n      return (\r\n        <div>\r\n            <div>\r\n                I came from a {this.functionInComponent()}\r\n            </div>\r\n            <div>\r\n                {this.returnSomeJSX()}\r\n            </div>\r\n            <div>\r\n                You can also return <OtherComponent />\r\n            </div>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n\r\n  class OtherComponent extends React.Component {\r\n    render() {\r\n      return <span>other components</span>\r\n    }\r\n  }\r\n\r\n  render(\r\n      <OriginalComponent />\r\n  )\r\n`.trim();\r\n\r\nexport default class page extends Component {\r\n    render() {\r\n        return (\r\n            <>\r\n                <h1 className=\"bp3-heading\">Functions</h1>\r\n                <p>You can declare your own functions (and variables) in React components too</p>\r\n                <p>Members declared within a React class are accessed using <code>this</code></p>\r\n                <div className=\"liveWrapper\">\r\n                    <LiveProvider code={code} noInline>\r\n                        <LiveEditor className=\"liveEditor\" />\r\n                        <div className=\"liveResult\">\r\n                            <LiveError />\r\n                            <LivePreview />\r\n                        </div>\r\n                    </LiveProvider>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport {\r\n    LiveProvider,\r\n    LiveEditor,\r\n    LiveError,\r\n    LivePreview\r\n} from 'react-live'\r\n\r\nconst code = `\r\nclass ParentComponent extends React.Component {\r\n    render() {\r\n      return (\r\n        <div>\r\n            Boxes:\r\n            <ChildComponent contents=\"apples\" />\r\n            <ChildComponent contents=\"pears\" />\r\n            <ChildComponent contents=\"mangos\" />\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n  \r\nclass ChildComponent extends React.Component {\r\n    render() {\r\n      return (\r\n        <div>\r\n            Box full of {this.props.contents}\r\n        </div>      \r\n      )\r\n    }\r\n}\r\n\r\nrender(\r\n  <ParentComponent />\r\n)\r\n`.trim();\r\n\r\nexport default class page extends Component {\r\n    render() {\r\n        return (\r\n            <>\r\n                <h1 className=\"bp3-heading\">React Props</h1>\r\n                <p>React Components can accept inputs called \"props\" (properties). This is similar to function arguments, or HTML attributes.</p>\r\n                <p>They can be used to pass data from a parent component to a child component</p>\r\n                <div className=\"liveWrapper\">\r\n                    <LiveProvider code={code} noInline>\r\n                        <LiveEditor className=\"liveEditor\"/>\r\n                        <div className=\"liveResult\">\r\n                            <LiveError />\r\n                            <LivePreview />\r\n                        </div>\r\n                    </LiveProvider>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport {\r\n    LiveProvider,\r\n    LiveEditor,\r\n    LiveError,\r\n    LivePreview\r\n} from 'react-live'\r\nimport { Button } from \"@blueprintjs/core\";\r\n\r\nconst code = `\r\nclass Component extends React.Component {\r\n    constructor() {\r\n        super()\r\n        this.state = { \r\n            count: 0\r\n        }\r\n    }\r\n\r\n    increaseCount(){\r\n        this.setState({\r\n            count: this.state.count + 1\r\n        })\r\n    }\r\n      \r\n    render() {\r\n      return (\r\n        <div>\r\n            Count is: {this.state.count}\r\n            <div>\r\n                <button onClick={this.increaseCount.bind(this)}>Increase</button>\r\n            </div>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n`.trim();\r\n\r\nexport default class page extends Component {\r\n    state = {\r\n        showExample: false\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <h1 className=\"bp3-heading\">React State</h1>\r\n                <p>All React components have a special property called \"state\", which belongs to the component</p>\r\n                <p>State is modified by using <code>this.setState()</code></p>\r\n                <p>Any time the state object changes the component will re-render (in other words, the render method will be called)</p>\r\n                <Button text=\"Show Example\" onClick={() => { this.setState({ showExample: !this.state.showExample }) }} />\r\n                {this.state.showExample &&\r\n                    <div className=\"liveWrapper\">\r\n                        <LiveProvider code={code}>\r\n                            <LiveEditor className=\"liveEditor\" />\r\n                            <div className=\"liveResult\">\r\n                                <LiveError />\r\n                                <LivePreview />\r\n                            </div>\r\n                        </LiveProvider>\r\n                    </div>\r\n                }\r\n            </>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport {\r\n    LiveProvider,\r\n    LiveEditor,\r\n    LiveError,\r\n    LivePreview\r\n} from 'react-live'\r\nimport { Button } from \"@blueprintjs/core\";\r\n\r\nconst code = `\r\nclass Component extends React.Component {\r\n    constructor() {\r\n        super()\r\n        this.state = { \r\n            count: 0\r\n        }\r\n        // you can also bind functions here\r\n        // this.increaseCount = this.increaseCount.bind(this)\r\n    }\r\n\r\n    increaseCount(){\r\n        this.setState({\r\n            count: this.state.count + 1\r\n        })\r\n    }\r\n\r\n    /*\r\n    This syntax can be used when using Create React App \r\n    increaseCountArrow = () => {\r\n        this.setState({\r\n            count: this.state.count + 1\r\n        })\r\n    }\r\n    */ \r\n\r\n    render() {\r\n      return (\r\n        <div>\r\n            Count is: {this.state.count}\r\n            <div>\r\n                <div>\r\n                    <button onClick={this.increaseCount.bind(this)}>\r\n                        Increase\r\n                    </button>\r\n                </div>\r\n                <div>\r\n                    <button onClick={() => { this.increaseCount() }}>\r\n                        Also Increase\r\n                    </button>\r\n                </div>\r\n                <div>\r\n                    <button onClick={this.increaseCountArrow}>\r\n                        Increase Again\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n`.trim();\r\n\r\nexport default class page extends Component {\r\n    state = {\r\n        showExample: false\r\n    }\r\n\r\n    showExample = () => {\r\n        this.setState({\r\n            showExample: !this.state.showExample\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <h1 className=\"bp3-heading\">Binding Functions</h1>\r\n                <p>An Event (such as onClick) can call a function (the Event Handler)</p>\r\n                <p>This function will not have access to <code>this</code>. There are two ways around this:</p>\r\n                <ol>\r\n                    <li>Use <code>bind</code></li>\r\n                    <li>Use an Arrow Function</li>\r\n                </ol>\r\n                <Button text=\"Show Example\" onClick={this.showExample} />\r\n                {this.state.showExample &&\r\n                    <div className=\"liveWrapper\">\r\n                        <LiveProvider code={code}>\r\n                            <LiveEditor className=\"liveEditor\" />\r\n                            <div className=\"liveResult\">\r\n                                <LiveError />\r\n                                <LivePreview />\r\n                            </div>\r\n                        </LiveProvider>\r\n                    </div>\r\n                }\r\n            </>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport {\r\n    LiveProvider,\r\n    LiveEditor,\r\n    LiveError,\r\n    LivePreview\r\n} from 'react-live'\r\nimport { Button } from \"@blueprintjs/core\";\r\n\r\nconst code = `\r\nclass MainComponent extends React.Component {  \r\n    constructor() {\r\n        super()\r\n        this.state = { \r\n            count: 0\r\n        }\r\n    }\r\n    \r\n    increaseCount(){\r\n        this.setState({\r\n            count: this.state.count + 1\r\n        })\r\n    }\r\n\r\n    render() {\r\n      return (\r\n        <div>\r\n            Count is: <NumberComponent count={this.state.count} />\r\n            <ButtonComponent increaseCount={this.increaseCount.bind(this)} />\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n\r\n  class ButtonComponent extends React.Component {  \r\n    render() {\r\n      return (\r\n        <div>\r\n            <button onClick={this.props.increaseCount}>Increase</button>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n\r\n  class NumberComponent extends React.Component {  \r\n    render() {\r\n        return (\r\n          <span>\r\n              {this.props.count}\r\n          </span>\r\n        )\r\n      }\r\n  }\r\n\r\n  render (\r\n      <MainComponent />\r\n   )\r\n  \r\n`.trim();\r\n\r\nexport default class page extends Component {\r\n    state = {\r\n        showExample: false\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <h1 className=\"bp3-heading\">Combining State and Props</h1>\r\n                <p>Functions can be passed as props by using just the function name. This gives a child component access to a function that exists in the parent component</p>\r\n                <p>Data can passed from a parent component to a child component via props</p>\r\n                <Button text=\"Show Example\" onClick={() => { this.setState({ showExample: !this.state.showExample }) }} />\r\n                {this.state.showExample &&\r\n                    <div className=\"liveWrapper\">\r\n                        <LiveProvider code={code} noInline>\r\n                            <LiveEditor className=\"liveEditor\" />\r\n                            <div className=\"liveResult\">\r\n                                <LiveError />\r\n                                <LivePreview />\r\n                            </div>\r\n                        </LiveProvider>\r\n                    </div>\r\n                }\r\n            </>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport {\r\n    LiveProvider,\r\n    LiveEditor,\r\n    LiveError,\r\n    LivePreview\r\n} from 'react-live'\r\nimport { Button } from \"@blueprintjs/core\";\r\n\r\nconst code = `\r\nclass MainComponent extends React.Component {\r\n    constructor() {\r\n        super()\r\n        this.state = { \r\n            number: 2\r\n        }\r\n    }\r\n    getValue(value){\r\n        this.setState({\r\n            number: value\r\n        })\r\n    }\r\n    render() {\r\n      return (\r\n        <div>\r\n            <CounterComponent send={this.getValue.bind(this)}/>\r\n            <BoxComponent amount={this.state.number}/>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\nclass CounterComponent extends React.Component {  \r\n    constructor() {\r\n        super()\r\n        this.state = { \r\n            count: 5\r\n        }\r\n    }\r\n    sendValue(){\r\n        this.props.send(this.state.count)\r\n    }\r\n    increaseCount(){\r\n        this.setState({\r\n            count: this.state.count + 1\r\n        })\r\n    }\r\n    \r\n    render() {\r\n      return (\r\n        <div>            \r\n            <div>\r\n                I can give {this.state.count} apples\r\n            </div>\r\n            <div>\r\n                <button onClick={this.increaseCount.bind(this)}>Increase</button>\r\n                <button onClick={this.sendValue.bind(this)}>Send</button>\r\n            </div>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\nclass BoxComponent extends React.Component {  \r\n    render() {\r\n        return (\r\n          <span>\r\n              Give me {this.props.amount} apples\r\n          </span>\r\n        )\r\n      }\r\n  }\r\n  render (\r\n      <MainComponent />\r\n   )  \r\n`.trim();\r\n\r\nexport default class page extends Component {\r\n    state = {\r\n        showExample: false\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <h1 className=\"bp3-heading\">Combining State and Props</h1>\r\n                <p>Data can passed from a parent component to a child component via props</p>\r\n                <p>Data can passed from a child component to a parent component via a function</p>\r\n                <Button text=\"Show Example\" onClick={() => { this.setState({ showExample: !this.state.showExample }) }} />\r\n                {this.state.showExample &&\r\n                    <div className=\"liveWrapper\">\r\n                        <LiveProvider code={code} noInline>\r\n                            <LiveEditor className=\"liveEditor\" />\r\n                            <div className=\"liveResult\">\r\n                                <LiveError />\r\n                                <LivePreview />\r\n                            </div>\r\n                        </LiveProvider>\r\n                    </div>\r\n                }\r\n            </>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport {\r\n    LiveProvider,\r\n    LiveEditor,\r\n    LiveError,\r\n    LivePreview\r\n} from 'react-live'\r\n\r\nconst code = `\r\nclass Component extends React.Component {\r\n    constructor() {\r\n        super()\r\n        this.state = { \r\n            text: \"original\"\r\n        }\r\n    }\r\n\r\n    popupText(){\r\n        alert(this.state.text)\r\n    }\r\n\r\n    noCallBack(){\r\n        this.setState({\r\n            text: \"modified\"\r\n        })\r\n        this.popupText()\r\n    }\r\n\r\n    withCallBack(){\r\n        this.setState({\r\n            text: \"modified\"\r\n        }, this.popupText)\r\n    }\r\n\r\n    render() {\r\n      return (\r\n        <div>\r\n            <div>\r\n                <button onClick={this.noCallBack.bind(this)}>No Callback</button>\r\n            </div>\r\n            <div>\r\n                <button onClick={this.withCallBack.bind(this)}>With Callback</button>\r\n            </div>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n`.trim();\r\n\r\nexport default class page extends Component {\r\n    render() {\r\n        return (\r\n            <>\r\n                <h1 className=\"bp3-heading\">Set State</h1>\r\n                <p><code>setState()</code> is <b>asynchronous</b>, in other words, it does not happen immediately</p>\r\n                <p><code>setState()</code> has a callback function which allows you to execute a function after <code>setState()</code> is complete</p>\r\n                <div className=\"liveWrapper\">\r\n                    <LiveProvider code={code}>\r\n                        <LiveEditor className=\"liveEditor\" />\r\n                        <div className=\"liveResult\">\r\n                            <LiveError />\r\n                            <LivePreview />\r\n                        </div>\r\n                    </LiveProvider>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport {\r\n    LiveProvider,\r\n    LiveEditor,\r\n    LiveError,\r\n    LivePreview\r\n} from 'react-live'\r\n\r\nconst code = `\r\nclass Component extends React.Component {\r\n    constructor() {\r\n        super()\r\n        this.state = { \r\n            showComponent: false\r\n        }\r\n    }\r\n\r\n    toggleComponent(){\r\n        this.setState({\r\n            showComponent: !this.state.showComponent\r\n        })\r\n    }\r\n\r\n    render() {\r\n      return (\r\n        <div>\r\n            <div>\r\n                <button onClick={this.toggleComponent.bind(this)}>Toggle</button>\r\n            </div>\r\n            {this.state.showComponent &&\r\n                <div>\r\n                    Toggle Me\r\n                </div>\r\n            }\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n`.trim();\r\n\r\nexport default class page extends Component {\r\n    render() {\r\n        return (\r\n            <>\r\n                <h1 className=\"bp3-heading\">Conditional Rendering</h1>\r\n                <p>JavaScript conditionals can be used conditionally render components</p>\r\n                <div className=\"liveWrapper\">\r\n                    <LiveProvider code={code}>\r\n                        <LiveEditor className=\"liveEditor\" />\r\n                        <div className=\"liveResult\">\r\n                            <LiveError />\r\n                            <LivePreview />\r\n                        </div>\r\n                    </LiveProvider>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport {\r\n    LiveProvider,\r\n    LiveEditor,\r\n    LiveError,\r\n    LivePreview\r\n} from 'react-live'\r\n\r\nconst code = `\r\nclass Component extends React.Component {\r\n    constructor() {\r\n        super()\r\n        this.state = { \r\n            count: 0\r\n        }\r\n    }\r\n\r\n    increaseCount(){\r\n        this.setState({\r\n            count: this.state.count + 1\r\n        })\r\n    }\r\n      \r\n    render() {\r\n    const url = \"https://i2.wp.com/metro.co.uk/wp-content/uploads/2018/03/739281687.jpg?quality=90&strip=all&zoom=1&resize=644%2C429&ssl=1\"\r\n      return (\r\n        <div>\r\n            Count is: {this.state.count}\r\n            <div>\r\n                {this.state.count < 10 ? \r\n                    <button onClick={this.increaseCount.bind(this)}>\r\n                        Increase\r\n                    </button>\r\n                    :\r\n                    <img height=\"200\" src={url}/>\r\n                }\r\n            </div>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n`.trim();\r\n\r\nexport default class page extends Component {\r\n    render() {\r\n        return (\r\n            <>\r\n                <h1 className=\"bp3-heading\">Conditional Rendering</h1>\r\n                <p>With a ternary operator</p>\r\n                    <div className=\"liveWrapper\">\r\n                        <LiveProvider code={code}>\r\n                            <LiveEditor className=\"liveEditor\" />\r\n                            <div className=\"liveResult\">\r\n                                <LiveError />\r\n                                <LivePreview />\r\n                            </div>\r\n                        </LiveProvider>\r\n                    </div>                \r\n            </>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport {\r\n    LiveProvider,\r\n    LiveEditor,\r\n    LiveError,\r\n    LivePreview\r\n} from 'react-live'\r\n\r\nconst code = `\r\nclass Component extends React.Component {\r\n    constructor() {\r\n        super()\r\n        this.state = { \r\n            arrayOfThings: [2, \"\", \"text\", 0, true]\r\n        }\r\n    }\r\n      \r\n    render() {\r\n      return (\r\n        <div>\r\n            <ol>\r\n                {this.state.arrayOfThings.map((element, index) => {\r\n                    if (element){\r\n                      return <li key={index}>{element.toString()}</li>\r\n                    }\r\n                })}     \r\n            </ol>  \r\n        </div>\r\n      )\r\n    }\r\n  }\r\n`.trim();\r\n\r\nexport default class page extends Component {\r\n    render() {\r\n        return (\r\n            <>\r\n                <h1 className=\"bp3-heading\">Conditional Rendering</h1>\r\n                    <div className=\"liveWrapper\">\r\n                        <LiveProvider code={code}>\r\n                            <LiveEditor className=\"liveEditor\" />\r\n                            <div className=\"liveResult\">\r\n                                <LiveError />\r\n                                <LivePreview />\r\n                            </div>\r\n                        </LiveProvider>\r\n                    </div>                \r\n            </>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport {\r\n    LiveProvider,\r\n    LiveEditor,\r\n    LiveError,\r\n    LivePreview\r\n} from 'react-live'\r\n\r\nconst code = `\r\nclass Component extends React.Component {\r\n    constructor() {\r\n        super()\r\n        this.state = { \r\n            date: new Date()\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.timer = setInterval(() => this.tick(), 1000);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.timer);\r\n    }\r\n\r\n    tick(){\r\n        this.setState({\r\n            date: new Date()\r\n        })\r\n    }\r\n      \r\n    render() {\r\n      return (\r\n        <div>\r\n            The current date is: {this.state.date.toLocaleString()} \r\n        </div>\r\n      )\r\n    }\r\n  }\r\n`.trim();\r\n\r\nexport default class page extends Component {\r\n    render() {\r\n        return (\r\n            <>\r\n                <h1 className=\"bp3-heading\">Lifecycle Methods</h1>\r\n                <p>React class components have access to a number of \"lifecycle methods\". These are automatically called throughout the lifecycle of the component, for example, when the component is first rendered, or updated with new props.</p>\r\n                <p>The most common methods are:</p>\r\n                <ul>\r\n                    <li><code>componentDidMount()</code></li>\r\n                    <li><code>componentDidUpdate(prevProps, prevState)</code></li>\r\n                    <li><code>componentWillUnmount()</code></li>\r\n                </ul>\r\n                <div className=\"liveWrapper\">\r\n                    <LiveProvider code={code}>\r\n                        <LiveEditor className=\"liveEditor\" />\r\n                        <div className=\"liveResult\">\r\n                            <LiveError />\r\n                            <LivePreview />\r\n                        </div>\r\n                    </LiveProvider>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport {\r\n    LiveProvider,\r\n    LiveEditor,\r\n    LiveError,\r\n    LivePreview\r\n} from 'react-live'\r\n\r\nconst code = `\r\nclass ParentComponent extends React.Component {\r\n    constructor() {\r\n        super()\r\n        this.state = { \r\n            animal: \"dog\"\r\n        }\r\n    }\r\n\r\n    change(){\r\n        this.setState({\r\n            animal: \"cat\"\r\n        })        \r\n    }\r\n      \r\n    render() {\r\n      return (\r\n        <div>\r\n            <div>\r\n                <button onClick={this.change.bind(this)}>Change</button>\r\n            </div>\r\n            <ChildComponent animal={this.state.animal} />\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n\r\n  class ChildComponent extends React.Component {\r\n    constructor() {\r\n        super()\r\n        this.state = { \r\n            changed: false\r\n        }\r\n    }\r\n    componentDidUpdate(prevProps){\r\n        if(prevProps.animal !== this.props.animal){\r\n            this.setState({\r\n                changed: true\r\n            })  \r\n        }\r\n    }\r\n    render() {\r\n      return (\r\n        <div>\r\n            The animal has {this.state.changed ? \"changed\" : \"not changed\"}\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n\r\n  render(\r\n      <ParentComponent />\r\n  )\r\n`.trim();\r\n\r\nexport default class page extends Component {    \r\n    render() {\r\n        return (\r\n            <>\r\n                <h1 className=\"bp3-heading\">componentDidUpdate</h1>\r\n                <p>Called after a state change or prop change in the component</p>\r\n                <p>Can be useful for re-rendering a component when it receives new props as a prop change will not trigger a re-render</p>\r\n                <div className=\"liveWrapper\">\r\n                    <LiveProvider code={code} noInline>\r\n                        <LiveEditor className=\"liveEditor\" />\r\n                        <div className=\"liveResult\">\r\n                            <LiveError />\r\n                            <LivePreview />\r\n                        </div>\r\n                    </LiveProvider>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport {\r\n    LiveProvider,\r\n    LiveEditor,\r\n    LiveError,\r\n    LivePreview\r\n} from 'react-live'\r\n\r\nconst code = `\r\nclass Component extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {value: ''};\r\n    \r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n      }\r\n    \r\n      handleChange(event) {\r\n        this.setState({\r\n            value: event.target.value\r\n        });\r\n      }\r\n    \r\n      handleSubmit(event) {\r\n        alert('A name was submitted: ' + this.state.value);\r\n        event.preventDefault();\r\n      }\r\n    \r\n      render() {\r\n        return (\r\n          <form onSubmit={this.handleSubmit}>\r\n            <label>\r\n              Name:\r\n              <input\r\n                type=\"text\"\r\n                value={this.state.value}\r\n                onChange={this.handleChange}\r\n              />\r\n            </label>\r\n            <input type=\"submit\" value=\"Submit\" />\r\n          </form>\r\n        );\r\n      }\r\n  }\r\n`.trim();\r\n\r\nexport default class page extends Component {    \r\n    render() {\r\n        return (\r\n            <>\r\n                <h1 className=\"bp3-heading\">Forms</h1>\r\n                <p>In React, form elements need to be \"controlled components\", i.e. they need to be controlled by state</p>\r\n                <div className=\"liveWrapper\">\r\n                    <LiveProvider code={code}>\r\n                        <LiveEditor className=\"liveEditor\" />\r\n                        <div className=\"liveResult\">\r\n                            <LiveError />\r\n                            <LivePreview />\r\n                        </div>\r\n                    </LiveProvider>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport {\r\n    LiveProvider,\r\n    LiveEditor,\r\n    LiveError,\r\n    LivePreview\r\n} from 'react-live'\r\n\r\nconst code = `\r\nclass Component extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            value: 'coconut'\r\n        };\r\n    \r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n      }\r\n    \r\n      handleChange(event) {\r\n        this.setState({\r\n            value: event.target.value\r\n        });\r\n      }\r\n    \r\n      handleSubmit(event) {\r\n        alert('Your favorite flavor is: ' + this.state.value);\r\n        event.preventDefault();\r\n      }\r\n    \r\n      render() {\r\n        return (\r\n          <form onSubmit={this.handleSubmit}>\r\n            <label>\r\n              Pick your favorite flavor:\r\n              <select value={this.state.value} onChange={this.handleChange}>\r\n                <option value=\"grapefruit\">Grapefruit</option>\r\n                <option value=\"lime\">Lime</option>\r\n                <option value=\"coconut\">Coconut</option>\r\n                <option value=\"mango\">Mango</option>\r\n                <option value=\"lychee\">Lychee</option>\r\n              </select>\r\n            </label>\r\n            <input type=\"submit\" value=\"Submit\" />\r\n          </form>\r\n        );\r\n      }\r\n  }\r\n`.trim();\r\n\r\nexport default class page extends Component {    \r\n    render() {\r\n        return (\r\n            <>\r\n                <h1 className=\"bp3-heading\">Dropdowns</h1>\r\n                <div className=\"liveWrapper\">\r\n                    <LiveProvider code={code}>\r\n                        <LiveEditor className=\"liveEditor\" />\r\n                        <div className=\"liveResult\">\r\n                            <LiveError />\r\n                            <LivePreview />\r\n                        </div>\r\n                    </LiveProvider>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport {\r\n    LiveProvider,\r\n    LiveEditor,\r\n    LiveError,\r\n    LivePreview\r\n} from 'react-live'\r\n\r\nconst code = `\r\nclass Component extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            username: 'Sean',\r\n            flavor: 'coconut'\r\n        };\r\n    \r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n      }\r\n    \r\n      handleChange(event) {\r\n        const name = event.target.name\r\n        const value = event.target.value\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n      }\r\n    \r\n      handleSubmit(event) {\r\n        alert(this.state.username + \"'s favorite flavor is: \" + this.state.flavor);\r\n        event.preventDefault();\r\n      }\r\n    \r\n      render() {\r\n        return (\r\n          <form onSubmit={this.handleSubmit}>\r\n          <div>\r\n            <label>\r\n              Name:\r\n              <input\r\n                name=\"username\"\r\n                type=\"text\"\r\n                value={this.state.username}\r\n                onChange={this.handleChange}\r\n              />\r\n            </label>\r\n           </div>\r\n           <div>\r\n            <label>\r\n              Pick your favorite flavor:\r\n              <select name=\"flavor\" value={this.state.flavor} onChange={this.handleChange}>\r\n                <option value=\"grapefruit\">Grapefruit</option>\r\n                <option value=\"lime\">Lime</option>\r\n                <option value=\"coconut\">Coconut</option>\r\n                <option value=\"mango\">Mango</option>\r\n                <option value=\"lychee\">Lychee</option>\r\n              </select>\r\n            </label>\r\n            </div>\r\n            <div>\r\n            <input type=\"submit\" value=\"Submit\" />\r\n            </div>\r\n          </form>\r\n        );\r\n      }\r\n  }\r\n`.trim();\r\n\r\nexport default class page extends Component {\r\n    render() {\r\n        return (\r\n            <>\r\n                <h1 className=\"bp3-heading\">Multiple Inputs</h1>\r\n                <p>A single <code>handleChange</code> event handler can be used for all inputs by using \"computed property name\" syntax</p>\r\n                <div className=\"liveWrapper\">\r\n                    <LiveProvider code={code}>\r\n                        <LiveEditor className=\"liveEditor\" />\r\n                        <div className=\"liveResult\">\r\n                            <LiveError />\r\n                            <LivePreview />\r\n                        </div>\r\n                    </LiveProvider>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Button, ProgressBar, Popover, Menu, MenuItem, Position } from \"@blueprintjs/core\";\r\nimport Page1 from './react/page1';\r\nimport Page2 from './react/page2';\r\nimport Page3 from './react/page3';\r\nimport Page4 from './react/page4';\r\nimport Page5 from './react/page5';\r\nimport Page6 from './react/page6';\r\nimport Page7 from './react/page7';\r\nimport Page8 from './react/page8';\r\nimport Page9 from './react/page9';\r\nimport Page10 from './react/page10';\r\nimport Page11 from './react/page11';\r\nimport Page12 from './react/page12';\r\nimport Page13 from './react/page13';\r\nimport Page14 from './react/page14';\r\nimport Page15 from './react/page15';\r\nimport Page16 from './react/page16';\r\nimport Page17 from './react/page17';\r\n\r\nexport default class ReactContent extends Component {\r\n    state = {\r\n        pageIndex: 0,\r\n    }\r\n\r\n    pages = [\r\n        <Page1 />,\r\n        <Page2 />,\r\n        <Page3 />,\r\n        <Page4 />,\r\n        <Page5 />,\r\n        <Page6 />,\r\n        <Page7 />,\r\n        <Page8 />,\r\n        <Page9 />,\r\n        <Page10 />,\r\n        <Page11 />,\r\n        <Page12 />,\r\n        <Page13 />,\r\n        <Page14 />,\r\n        <Page15 />,\r\n        <Page16 />,\r\n        <Page17 />\r\n    ]\r\n\r\n    pageHeadings = [\r\n        \"React Components\",\r\n        \"JSX\",\r\n        \"Functions\",\r\n        \"React Props\",\r\n        \"React State\",\r\n        \"Binding Functions\",\r\n        \"Combining State and Props 1\",\r\n        \"Combining State and Props 2\",\r\n        \"Set State\",\r\n        \"Conditional Rendering 1\",\r\n        \"Conditional Rendering 2\",\r\n        \"Conditional Rendering 3\",\r\n        \"Lifecycle Methods\",\r\n        \"componentDidUpdate\",\r\n        \"Forms\",\r\n        \"Dropdowns\",\r\n        \"Multiple Inputs\"\r\n    ]\r\n\r\n    getMenu = () => {\r\n        return <Menu>\r\n            {this.pageHeadings.map((heading, index) =>\r\n                <MenuItem text={heading} onClick={() => { this.setState({ pageIndex: index }) }} disabled={this.state.pageIndex === index} />\r\n            )}\r\n        </Menu>\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <div>\r\n                    <ProgressBar stripes={false} intent=\"primary\" value={this.state.pageIndex / (this.pages.length - 1)} />\r\n                </div>\r\n                <div style={{ marginTop: \"10px\" }}>\r\n                    {this.state.pageIndex > 0 &&\r\n                        <Button icon=\"arrow-left\" text=\"Previous\" onClick={() => { this.setState({ pageIndex: this.state.pageIndex - 1 }) }} />\r\n                    }\r\n                    <Popover className=\"jumpButton\" content={this.getMenu()} position={Position.BOTTOM}>\r\n                        <Button text=\"Jump to...\" />\r\n                    </Popover>\r\n                    {this.state.pageIndex < this.pages.length - 1 &&\r\n                        <Button className=\"nextButton\" rightIcon=\"arrow-right\" text=\"Next\" onClick={() => { this.setState({ pageIndex: this.state.pageIndex + 1 }) }} />\r\n                    }\r\n                </div>\r\n                <div className=\"pageContent\">\r\n                    {this.pages[this.state.pageIndex]}\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Navbar, Button } from \"@blueprintjs/core\";\r\nimport Index from './Index'\r\nimport Javascript from './javascript'\r\nimport MoreJavascript from './moreJavascript'\r\nimport ReactContent from './react'\r\n\r\nexport default class Home extends Component {\r\n    state = {\r\n        page: \"index\"\r\n    }\r\n\r\n    displayPage() {\r\n        switch (this.state.page) {\r\n            case \"index\":\r\n                return <Index changePage={this.changePage} />\r\n            case \"javascript\":\r\n                return <Javascript />\r\n            case \"react\":\r\n                return <ReactContent />\r\n            case \"moreJavascript\":\r\n                return <MoreJavascript />\r\n            default:\r\n                return <Index />\r\n        }\r\n    }\r\n\r\n    changePage = (page) => {\r\n        this.setState({\r\n            page\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Navbar className=\"bp3-dark\">\r\n                    <Navbar.Group>\r\n                        <Button className=\"bp3-minimal\" icon=\"home\" text=\"Index\" onClick={() => { this.changePage(\"index\") }} />\r\n                    </Navbar.Group>\r\n                </Navbar>\r\n                <div className=\"mainContent\">\r\n                    {this.displayPage()}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport './App.scss';\r\nimport \"normalize.css\";\r\nimport \"@blueprintjs/core/lib/css/blueprint.css\";\r\nimport \"@blueprintjs/icons/lib/css/blueprint-icons.css\";\r\nimport Home from './components/home'\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Home />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","var map = {\n\t\"./Binary_Property/ASCII.js\": 97,\n\t\"./Binary_Property/ASCII_Hex_Digit.js\": 98,\n\t\"./Binary_Property/Alphabetic.js\": 99,\n\t\"./Binary_Property/Any.js\": 100,\n\t\"./Binary_Property/Assigned.js\": 101,\n\t\"./Binary_Property/Bidi_Control.js\": 102,\n\t\"./Binary_Property/Bidi_Mirrored.js\": 103,\n\t\"./Binary_Property/Case_Ignorable.js\": 104,\n\t\"./Binary_Property/Cased.js\": 105,\n\t\"./Binary_Property/Changes_When_Casefolded.js\": 106,\n\t\"./Binary_Property/Changes_When_Casemapped.js\": 107,\n\t\"./Binary_Property/Changes_When_Lowercased.js\": 108,\n\t\"./Binary_Property/Changes_When_NFKC_Casefolded.js\": 109,\n\t\"./Binary_Property/Changes_When_Titlecased.js\": 110,\n\t\"./Binary_Property/Changes_When_Uppercased.js\": 111,\n\t\"./Binary_Property/Dash.js\": 112,\n\t\"./Binary_Property/Default_Ignorable_Code_Point.js\": 113,\n\t\"./Binary_Property/Deprecated.js\": 114,\n\t\"./Binary_Property/Diacritic.js\": 115,\n\t\"./Binary_Property/Emoji.js\": 116,\n\t\"./Binary_Property/Emoji_Component.js\": 117,\n\t\"./Binary_Property/Emoji_Modifier.js\": 118,\n\t\"./Binary_Property/Emoji_Modifier_Base.js\": 119,\n\t\"./Binary_Property/Emoji_Presentation.js\": 120,\n\t\"./Binary_Property/Extended_Pictographic.js\": 121,\n\t\"./Binary_Property/Extender.js\": 122,\n\t\"./Binary_Property/Grapheme_Base.js\": 123,\n\t\"./Binary_Property/Grapheme_Extend.js\": 124,\n\t\"./Binary_Property/Hex_Digit.js\": 125,\n\t\"./Binary_Property/IDS_Binary_Operator.js\": 126,\n\t\"./Binary_Property/IDS_Trinary_Operator.js\": 127,\n\t\"./Binary_Property/ID_Continue.js\": 128,\n\t\"./Binary_Property/ID_Start.js\": 129,\n\t\"./Binary_Property/Ideographic.js\": 130,\n\t\"./Binary_Property/Join_Control.js\": 131,\n\t\"./Binary_Property/Logical_Order_Exception.js\": 132,\n\t\"./Binary_Property/Lowercase.js\": 133,\n\t\"./Binary_Property/Math.js\": 134,\n\t\"./Binary_Property/Noncharacter_Code_Point.js\": 135,\n\t\"./Binary_Property/Pattern_Syntax.js\": 136,\n\t\"./Binary_Property/Pattern_White_Space.js\": 137,\n\t\"./Binary_Property/Quotation_Mark.js\": 138,\n\t\"./Binary_Property/Radical.js\": 139,\n\t\"./Binary_Property/Regional_Indicator.js\": 140,\n\t\"./Binary_Property/Sentence_Terminal.js\": 141,\n\t\"./Binary_Property/Soft_Dotted.js\": 142,\n\t\"./Binary_Property/Terminal_Punctuation.js\": 143,\n\t\"./Binary_Property/Unified_Ideograph.js\": 144,\n\t\"./Binary_Property/Uppercase.js\": 145,\n\t\"./Binary_Property/Variation_Selector.js\": 146,\n\t\"./Binary_Property/White_Space.js\": 147,\n\t\"./Binary_Property/XID_Continue.js\": 148,\n\t\"./Binary_Property/XID_Start.js\": 149,\n\t\"./General_Category/Cased_Letter.js\": 150,\n\t\"./General_Category/Close_Punctuation.js\": 151,\n\t\"./General_Category/Connector_Punctuation.js\": 152,\n\t\"./General_Category/Control.js\": 153,\n\t\"./General_Category/Currency_Symbol.js\": 154,\n\t\"./General_Category/Dash_Punctuation.js\": 155,\n\t\"./General_Category/Decimal_Number.js\": 156,\n\t\"./General_Category/Enclosing_Mark.js\": 157,\n\t\"./General_Category/Final_Punctuation.js\": 158,\n\t\"./General_Category/Format.js\": 159,\n\t\"./General_Category/Initial_Punctuation.js\": 160,\n\t\"./General_Category/Letter.js\": 161,\n\t\"./General_Category/Letter_Number.js\": 162,\n\t\"./General_Category/Line_Separator.js\": 163,\n\t\"./General_Category/Lowercase_Letter.js\": 164,\n\t\"./General_Category/Mark.js\": 165,\n\t\"./General_Category/Math_Symbol.js\": 166,\n\t\"./General_Category/Modifier_Letter.js\": 167,\n\t\"./General_Category/Modifier_Symbol.js\": 168,\n\t\"./General_Category/Nonspacing_Mark.js\": 169,\n\t\"./General_Category/Number.js\": 170,\n\t\"./General_Category/Open_Punctuation.js\": 171,\n\t\"./General_Category/Other.js\": 172,\n\t\"./General_Category/Other_Letter.js\": 173,\n\t\"./General_Category/Other_Number.js\": 174,\n\t\"./General_Category/Other_Punctuation.js\": 175,\n\t\"./General_Category/Other_Symbol.js\": 176,\n\t\"./General_Category/Paragraph_Separator.js\": 177,\n\t\"./General_Category/Private_Use.js\": 178,\n\t\"./General_Category/Punctuation.js\": 179,\n\t\"./General_Category/Separator.js\": 180,\n\t\"./General_Category/Space_Separator.js\": 181,\n\t\"./General_Category/Spacing_Mark.js\": 182,\n\t\"./General_Category/Surrogate.js\": 183,\n\t\"./General_Category/Symbol.js\": 184,\n\t\"./General_Category/Titlecase_Letter.js\": 185,\n\t\"./General_Category/Unassigned.js\": 186,\n\t\"./General_Category/Uppercase_Letter.js\": 187,\n\t\"./Script/Adlam.js\": 188,\n\t\"./Script/Ahom.js\": 189,\n\t\"./Script/Anatolian_Hieroglyphs.js\": 190,\n\t\"./Script/Arabic.js\": 191,\n\t\"./Script/Armenian.js\": 192,\n\t\"./Script/Avestan.js\": 193,\n\t\"./Script/Balinese.js\": 194,\n\t\"./Script/Bamum.js\": 195,\n\t\"./Script/Bassa_Vah.js\": 196,\n\t\"./Script/Batak.js\": 197,\n\t\"./Script/Bengali.js\": 198,\n\t\"./Script/Bhaiksuki.js\": 199,\n\t\"./Script/Bopomofo.js\": 200,\n\t\"./Script/Brahmi.js\": 201,\n\t\"./Script/Braille.js\": 202,\n\t\"./Script/Buginese.js\": 203,\n\t\"./Script/Buhid.js\": 204,\n\t\"./Script/Canadian_Aboriginal.js\": 205,\n\t\"./Script/Carian.js\": 206,\n\t\"./Script/Caucasian_Albanian.js\": 207,\n\t\"./Script/Chakma.js\": 208,\n\t\"./Script/Cham.js\": 209,\n\t\"./Script/Cherokee.js\": 210,\n\t\"./Script/Common.js\": 211,\n\t\"./Script/Coptic.js\": 212,\n\t\"./Script/Cuneiform.js\": 213,\n\t\"./Script/Cypriot.js\": 214,\n\t\"./Script/Cyrillic.js\": 215,\n\t\"./Script/Deseret.js\": 216,\n\t\"./Script/Devanagari.js\": 217,\n\t\"./Script/Dogra.js\": 218,\n\t\"./Script/Duployan.js\": 219,\n\t\"./Script/Egyptian_Hieroglyphs.js\": 220,\n\t\"./Script/Elbasan.js\": 221,\n\t\"./Script/Elymaic.js\": 222,\n\t\"./Script/Ethiopic.js\": 223,\n\t\"./Script/Georgian.js\": 224,\n\t\"./Script/Glagolitic.js\": 225,\n\t\"./Script/Gothic.js\": 226,\n\t\"./Script/Grantha.js\": 227,\n\t\"./Script/Greek.js\": 228,\n\t\"./Script/Gujarati.js\": 229,\n\t\"./Script/Gunjala_Gondi.js\": 230,\n\t\"./Script/Gurmukhi.js\": 231,\n\t\"./Script/Han.js\": 232,\n\t\"./Script/Hangul.js\": 233,\n\t\"./Script/Hanifi_Rohingya.js\": 234,\n\t\"./Script/Hanunoo.js\": 235,\n\t\"./Script/Hatran.js\": 236,\n\t\"./Script/Hebrew.js\": 237,\n\t\"./Script/Hiragana.js\": 238,\n\t\"./Script/Imperial_Aramaic.js\": 239,\n\t\"./Script/Inherited.js\": 240,\n\t\"./Script/Inscriptional_Pahlavi.js\": 241,\n\t\"./Script/Inscriptional_Parthian.js\": 242,\n\t\"./Script/Javanese.js\": 243,\n\t\"./Script/Kaithi.js\": 244,\n\t\"./Script/Kannada.js\": 245,\n\t\"./Script/Katakana.js\": 246,\n\t\"./Script/Kayah_Li.js\": 247,\n\t\"./Script/Kharoshthi.js\": 248,\n\t\"./Script/Khmer.js\": 249,\n\t\"./Script/Khojki.js\": 250,\n\t\"./Script/Khudawadi.js\": 251,\n\t\"./Script/Lao.js\": 252,\n\t\"./Script/Latin.js\": 253,\n\t\"./Script/Lepcha.js\": 254,\n\t\"./Script/Limbu.js\": 255,\n\t\"./Script/Linear_A.js\": 256,\n\t\"./Script/Linear_B.js\": 257,\n\t\"./Script/Lisu.js\": 258,\n\t\"./Script/Lycian.js\": 259,\n\t\"./Script/Lydian.js\": 260,\n\t\"./Script/Mahajani.js\": 261,\n\t\"./Script/Makasar.js\": 262,\n\t\"./Script/Malayalam.js\": 263,\n\t\"./Script/Mandaic.js\": 264,\n\t\"./Script/Manichaean.js\": 265,\n\t\"./Script/Marchen.js\": 266,\n\t\"./Script/Masaram_Gondi.js\": 267,\n\t\"./Script/Medefaidrin.js\": 268,\n\t\"./Script/Meetei_Mayek.js\": 269,\n\t\"./Script/Mende_Kikakui.js\": 270,\n\t\"./Script/Meroitic_Cursive.js\": 271,\n\t\"./Script/Meroitic_Hieroglyphs.js\": 272,\n\t\"./Script/Miao.js\": 273,\n\t\"./Script/Modi.js\": 274,\n\t\"./Script/Mongolian.js\": 275,\n\t\"./Script/Mro.js\": 276,\n\t\"./Script/Multani.js\": 277,\n\t\"./Script/Myanmar.js\": 278,\n\t\"./Script/Nabataean.js\": 279,\n\t\"./Script/Nandinagari.js\": 280,\n\t\"./Script/New_Tai_Lue.js\": 281,\n\t\"./Script/Newa.js\": 282,\n\t\"./Script/Nko.js\": 283,\n\t\"./Script/Nushu.js\": 284,\n\t\"./Script/Nyiakeng_Puachue_Hmong.js\": 285,\n\t\"./Script/Ogham.js\": 286,\n\t\"./Script/Ol_Chiki.js\": 287,\n\t\"./Script/Old_Hungarian.js\": 288,\n\t\"./Script/Old_Italic.js\": 289,\n\t\"./Script/Old_North_Arabian.js\": 290,\n\t\"./Script/Old_Permic.js\": 291,\n\t\"./Script/Old_Persian.js\": 292,\n\t\"./Script/Old_Sogdian.js\": 293,\n\t\"./Script/Old_South_Arabian.js\": 294,\n\t\"./Script/Old_Turkic.js\": 295,\n\t\"./Script/Oriya.js\": 296,\n\t\"./Script/Osage.js\": 297,\n\t\"./Script/Osmanya.js\": 298,\n\t\"./Script/Pahawh_Hmong.js\": 299,\n\t\"./Script/Palmyrene.js\": 300,\n\t\"./Script/Pau_Cin_Hau.js\": 301,\n\t\"./Script/Phags_Pa.js\": 302,\n\t\"./Script/Phoenician.js\": 303,\n\t\"./Script/Psalter_Pahlavi.js\": 304,\n\t\"./Script/Rejang.js\": 305,\n\t\"./Script/Runic.js\": 306,\n\t\"./Script/Samaritan.js\": 307,\n\t\"./Script/Saurashtra.js\": 308,\n\t\"./Script/Sharada.js\": 309,\n\t\"./Script/Shavian.js\": 310,\n\t\"./Script/Siddham.js\": 311,\n\t\"./Script/SignWriting.js\": 312,\n\t\"./Script/Sinhala.js\": 313,\n\t\"./Script/Sogdian.js\": 314,\n\t\"./Script/Sora_Sompeng.js\": 315,\n\t\"./Script/Soyombo.js\": 316,\n\t\"./Script/Sundanese.js\": 317,\n\t\"./Script/Syloti_Nagri.js\": 318,\n\t\"./Script/Syriac.js\": 319,\n\t\"./Script/Tagalog.js\": 320,\n\t\"./Script/Tagbanwa.js\": 321,\n\t\"./Script/Tai_Le.js\": 322,\n\t\"./Script/Tai_Tham.js\": 323,\n\t\"./Script/Tai_Viet.js\": 324,\n\t\"./Script/Takri.js\": 325,\n\t\"./Script/Tamil.js\": 326,\n\t\"./Script/Tangut.js\": 327,\n\t\"./Script/Telugu.js\": 328,\n\t\"./Script/Thaana.js\": 329,\n\t\"./Script/Thai.js\": 330,\n\t\"./Script/Tibetan.js\": 331,\n\t\"./Script/Tifinagh.js\": 332,\n\t\"./Script/Tirhuta.js\": 333,\n\t\"./Script/Ugaritic.js\": 334,\n\t\"./Script/Vai.js\": 335,\n\t\"./Script/Wancho.js\": 336,\n\t\"./Script/Warang_Citi.js\": 337,\n\t\"./Script/Yi.js\": 338,\n\t\"./Script/Zanabazar_Square.js\": 339,\n\t\"./Script_Extensions/Adlam.js\": 340,\n\t\"./Script_Extensions/Ahom.js\": 341,\n\t\"./Script_Extensions/Anatolian_Hieroglyphs.js\": 342,\n\t\"./Script_Extensions/Arabic.js\": 343,\n\t\"./Script_Extensions/Armenian.js\": 344,\n\t\"./Script_Extensions/Avestan.js\": 345,\n\t\"./Script_Extensions/Balinese.js\": 346,\n\t\"./Script_Extensions/Bamum.js\": 347,\n\t\"./Script_Extensions/Bassa_Vah.js\": 348,\n\t\"./Script_Extensions/Batak.js\": 349,\n\t\"./Script_Extensions/Bengali.js\": 350,\n\t\"./Script_Extensions/Bhaiksuki.js\": 351,\n\t\"./Script_Extensions/Bopomofo.js\": 352,\n\t\"./Script_Extensions/Brahmi.js\": 353,\n\t\"./Script_Extensions/Braille.js\": 354,\n\t\"./Script_Extensions/Buginese.js\": 355,\n\t\"./Script_Extensions/Buhid.js\": 356,\n\t\"./Script_Extensions/Canadian_Aboriginal.js\": 357,\n\t\"./Script_Extensions/Carian.js\": 358,\n\t\"./Script_Extensions/Caucasian_Albanian.js\": 359,\n\t\"./Script_Extensions/Chakma.js\": 360,\n\t\"./Script_Extensions/Cham.js\": 361,\n\t\"./Script_Extensions/Cherokee.js\": 362,\n\t\"./Script_Extensions/Common.js\": 363,\n\t\"./Script_Extensions/Coptic.js\": 364,\n\t\"./Script_Extensions/Cuneiform.js\": 365,\n\t\"./Script_Extensions/Cypriot.js\": 366,\n\t\"./Script_Extensions/Cyrillic.js\": 367,\n\t\"./Script_Extensions/Deseret.js\": 368,\n\t\"./Script_Extensions/Devanagari.js\": 369,\n\t\"./Script_Extensions/Dogra.js\": 370,\n\t\"./Script_Extensions/Duployan.js\": 371,\n\t\"./Script_Extensions/Egyptian_Hieroglyphs.js\": 372,\n\t\"./Script_Extensions/Elbasan.js\": 373,\n\t\"./Script_Extensions/Elymaic.js\": 374,\n\t\"./Script_Extensions/Ethiopic.js\": 375,\n\t\"./Script_Extensions/Georgian.js\": 376,\n\t\"./Script_Extensions/Glagolitic.js\": 377,\n\t\"./Script_Extensions/Gothic.js\": 378,\n\t\"./Script_Extensions/Grantha.js\": 379,\n\t\"./Script_Extensions/Greek.js\": 380,\n\t\"./Script_Extensions/Gujarati.js\": 381,\n\t\"./Script_Extensions/Gunjala_Gondi.js\": 382,\n\t\"./Script_Extensions/Gurmukhi.js\": 383,\n\t\"./Script_Extensions/Han.js\": 384,\n\t\"./Script_Extensions/Hangul.js\": 385,\n\t\"./Script_Extensions/Hanifi_Rohingya.js\": 386,\n\t\"./Script_Extensions/Hanunoo.js\": 387,\n\t\"./Script_Extensions/Hatran.js\": 388,\n\t\"./Script_Extensions/Hebrew.js\": 389,\n\t\"./Script_Extensions/Hiragana.js\": 390,\n\t\"./Script_Extensions/Imperial_Aramaic.js\": 391,\n\t\"./Script_Extensions/Inherited.js\": 392,\n\t\"./Script_Extensions/Inscriptional_Pahlavi.js\": 393,\n\t\"./Script_Extensions/Inscriptional_Parthian.js\": 394,\n\t\"./Script_Extensions/Javanese.js\": 395,\n\t\"./Script_Extensions/Kaithi.js\": 396,\n\t\"./Script_Extensions/Kannada.js\": 397,\n\t\"./Script_Extensions/Katakana.js\": 398,\n\t\"./Script_Extensions/Kayah_Li.js\": 399,\n\t\"./Script_Extensions/Kharoshthi.js\": 400,\n\t\"./Script_Extensions/Khmer.js\": 401,\n\t\"./Script_Extensions/Khojki.js\": 402,\n\t\"./Script_Extensions/Khudawadi.js\": 403,\n\t\"./Script_Extensions/Lao.js\": 404,\n\t\"./Script_Extensions/Latin.js\": 405,\n\t\"./Script_Extensions/Lepcha.js\": 406,\n\t\"./Script_Extensions/Limbu.js\": 407,\n\t\"./Script_Extensions/Linear_A.js\": 408,\n\t\"./Script_Extensions/Linear_B.js\": 409,\n\t\"./Script_Extensions/Lisu.js\": 410,\n\t\"./Script_Extensions/Lycian.js\": 411,\n\t\"./Script_Extensions/Lydian.js\": 412,\n\t\"./Script_Extensions/Mahajani.js\": 413,\n\t\"./Script_Extensions/Makasar.js\": 414,\n\t\"./Script_Extensions/Malayalam.js\": 415,\n\t\"./Script_Extensions/Mandaic.js\": 416,\n\t\"./Script_Extensions/Manichaean.js\": 417,\n\t\"./Script_Extensions/Marchen.js\": 418,\n\t\"./Script_Extensions/Masaram_Gondi.js\": 419,\n\t\"./Script_Extensions/Medefaidrin.js\": 420,\n\t\"./Script_Extensions/Meetei_Mayek.js\": 421,\n\t\"./Script_Extensions/Mende_Kikakui.js\": 422,\n\t\"./Script_Extensions/Meroitic_Cursive.js\": 423,\n\t\"./Script_Extensions/Meroitic_Hieroglyphs.js\": 424,\n\t\"./Script_Extensions/Miao.js\": 425,\n\t\"./Script_Extensions/Modi.js\": 426,\n\t\"./Script_Extensions/Mongolian.js\": 427,\n\t\"./Script_Extensions/Mro.js\": 428,\n\t\"./Script_Extensions/Multani.js\": 429,\n\t\"./Script_Extensions/Myanmar.js\": 430,\n\t\"./Script_Extensions/Nabataean.js\": 431,\n\t\"./Script_Extensions/Nandinagari.js\": 432,\n\t\"./Script_Extensions/New_Tai_Lue.js\": 433,\n\t\"./Script_Extensions/Newa.js\": 434,\n\t\"./Script_Extensions/Nko.js\": 435,\n\t\"./Script_Extensions/Nushu.js\": 436,\n\t\"./Script_Extensions/Nyiakeng_Puachue_Hmong.js\": 437,\n\t\"./Script_Extensions/Ogham.js\": 438,\n\t\"./Script_Extensions/Ol_Chiki.js\": 439,\n\t\"./Script_Extensions/Old_Hungarian.js\": 440,\n\t\"./Script_Extensions/Old_Italic.js\": 441,\n\t\"./Script_Extensions/Old_North_Arabian.js\": 442,\n\t\"./Script_Extensions/Old_Permic.js\": 443,\n\t\"./Script_Extensions/Old_Persian.js\": 444,\n\t\"./Script_Extensions/Old_Sogdian.js\": 445,\n\t\"./Script_Extensions/Old_South_Arabian.js\": 446,\n\t\"./Script_Extensions/Old_Turkic.js\": 447,\n\t\"./Script_Extensions/Oriya.js\": 448,\n\t\"./Script_Extensions/Osage.js\": 449,\n\t\"./Script_Extensions/Osmanya.js\": 450,\n\t\"./Script_Extensions/Pahawh_Hmong.js\": 451,\n\t\"./Script_Extensions/Palmyrene.js\": 452,\n\t\"./Script_Extensions/Pau_Cin_Hau.js\": 453,\n\t\"./Script_Extensions/Phags_Pa.js\": 454,\n\t\"./Script_Extensions/Phoenician.js\": 455,\n\t\"./Script_Extensions/Psalter_Pahlavi.js\": 456,\n\t\"./Script_Extensions/Rejang.js\": 457,\n\t\"./Script_Extensions/Runic.js\": 458,\n\t\"./Script_Extensions/Samaritan.js\": 459,\n\t\"./Script_Extensions/Saurashtra.js\": 460,\n\t\"./Script_Extensions/Sharada.js\": 461,\n\t\"./Script_Extensions/Shavian.js\": 462,\n\t\"./Script_Extensions/Siddham.js\": 463,\n\t\"./Script_Extensions/SignWriting.js\": 464,\n\t\"./Script_Extensions/Sinhala.js\": 465,\n\t\"./Script_Extensions/Sogdian.js\": 466,\n\t\"./Script_Extensions/Sora_Sompeng.js\": 467,\n\t\"./Script_Extensions/Soyombo.js\": 468,\n\t\"./Script_Extensions/Sundanese.js\": 469,\n\t\"./Script_Extensions/Syloti_Nagri.js\": 470,\n\t\"./Script_Extensions/Syriac.js\": 471,\n\t\"./Script_Extensions/Tagalog.js\": 472,\n\t\"./Script_Extensions/Tagbanwa.js\": 473,\n\t\"./Script_Extensions/Tai_Le.js\": 474,\n\t\"./Script_Extensions/Tai_Tham.js\": 475,\n\t\"./Script_Extensions/Tai_Viet.js\": 476,\n\t\"./Script_Extensions/Takri.js\": 477,\n\t\"./Script_Extensions/Tamil.js\": 478,\n\t\"./Script_Extensions/Tangut.js\": 479,\n\t\"./Script_Extensions/Telugu.js\": 480,\n\t\"./Script_Extensions/Thaana.js\": 481,\n\t\"./Script_Extensions/Thai.js\": 482,\n\t\"./Script_Extensions/Tibetan.js\": 483,\n\t\"./Script_Extensions/Tifinagh.js\": 484,\n\t\"./Script_Extensions/Tirhuta.js\": 485,\n\t\"./Script_Extensions/Ugaritic.js\": 486,\n\t\"./Script_Extensions/Vai.js\": 487,\n\t\"./Script_Extensions/Wancho.js\": 488,\n\t\"./Script_Extensions/Warang_Citi.js\": 489,\n\t\"./Script_Extensions/Yi.js\": 490,\n\t\"./Script_Extensions/Zanabazar_Square.js\": 491,\n\t\"./index.js\": 492,\n\t\"./unicode-version.js\": 493\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 96;"],"sourceRoot":""}